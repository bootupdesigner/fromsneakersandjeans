{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"size\",\"source\",\"style\",\"onError\",\"onLayout\",\"onLoad\",\"onLoadEnd\",\"onLoadStart\",\"onProgress\",\"theme\",\"testID\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Image from\"react-native-web/dist/exports/Image\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from\"../../core/theming\";var defaultSize=64;var AvatarImage=function AvatarImage(_ref){var _ref$size=_ref.size,size=_ref$size===void 0?defaultSize:_ref$size,source=_ref.source,style=_ref.style,onError=_ref.onError,onLayout=_ref.onLayout,onLoad=_ref.onLoad,onLoadEnd=_ref.onLoadEnd,onLoadStart=_ref.onLoadStart,onProgress=_ref.onProgress,themeOverrides=_ref.theme,testID=_ref.testID,rest=_objectWithoutProperties(_ref,_excluded);var _useInternalTheme=useInternalTheme(themeOverrides),colors=_useInternalTheme.colors;var _ref2=StyleSheet.flatten(style)||{},_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?colors===null||colors===void 0?void 0:colors.primary:_ref2$backgroundColor;return React.createElement(View,_extends({style:[{width:size,height:size,borderRadius:size/2,backgroundColor:backgroundColor},style]},rest),typeof source==='function'&&source({size:size}),typeof source!=='function'&&React.createElement(Image,{testID:testID,source:source,style:{width:size,height:size,borderRadius:size/2},onError:onError,onLayout:onLayout,onLoad:onLoad,onLoadEnd:onLoadEnd,onLoadStart:onLoadStart,onProgress:onProgress,accessibilityIgnoresInvertColors:true}));};AvatarImage.displayName='Avatar.Image';export default AvatarImage;","map":{"version":3,"sources":["AvatarImage.tsx"],"names":["React","useInternalTheme","defaultSize","AvatarImage","size","source","style","onError","onLayout","onLoad","onLoadEnd","onLoadStart","onProgress","theme","themeOverrides","testID","rest","colors","backgroundColor","primary","StyleSheet","flatten","width","height","borderRadius","displayName"],"mappings":"8fAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAAA,6KAW9B,OAASC,gBAAgB,0BAGzB,GAAMC,YAAW,CAAG,EAAE,CAoEtB,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAG,IAAA,CAaP,CAbQ,cAab,IAAA,CAZNC,IAAI,CAAJA,IAAI,oBAAGF,WAAW,WAClBG,MAAM,CAWA,IAAA,CAXNA,MAAM,CACNC,KAAK,CAUC,IAAA,CAVNA,KAAK,CACLC,OAAO,CASD,IAAA,CATNA,OAAO,CACPC,QAAQ,CAQF,IAAA,CARNA,QAAQ,CACRC,MAAM,CAOA,IAAA,CAPNA,MAAM,CACNC,SAAS,CAMH,IAAA,CANNA,SAAS,CACTC,WAAW,CAKL,IAAA,CALNA,WAAW,CACXC,UAAU,CAIJ,IAAA,CAJNA,UAAU,CACHE,cAAc,CAGf,IAAA,CAHND,KAAK,CACLE,MAAM,CAEA,IAAA,CAFNA,MAAM,CACHC,IAAAA,0BACG,IAAA,YACN,sBAAmBf,gBAAgB,CAACa,cAAc,CAAC,CAA3CG,MAAAA,mBAAAA,MAAAA,CACR,UAA8CG,UAAU,CAACC,OAAO,CAACf,KAAK,CAAC,EAAI,CAAC,CAAC,6BAArEY,eAAe,CAAfA,eAAe,gCAAGD,MAAM,GAAA,IAAA,EAANA,MAAM,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAANA,MAAM,CAAEE,OAAAA,uBAElC,MACE,MAAA,CAAA,aAAA,CAAC,IAAI,CAAA,QAAA,CAAA,CACH,KAAK,CAAE,CACL,CACEG,KAAK,CAAElB,IAAI,CACXmB,MAAM,CAAEnB,IAAI,CACZoB,YAAY,CAAEpB,IAAI,CAAG,CAAC,CACtBc,eAAAA,CAAAA,eACF,CAAC,CACDZ,KAAK,CACL,CAAA,CACEU,IAAI,CAAA,CAEP,MAAOX,OAAM,GAAK,UAAU,EAAIA,MAAM,CAAC,CAAED,IAAAA,CAAAA,IAAK,CAAC,CAAC,CAChD,MAAOC,OAAM,GAAK,UAAU,EAC3B,KAAA,CAAA,aAAA,CAAC,KAAK,CAAA,CACJ,MAAM,CAAEU,MAAO,CACf,MAAM,CAAEV,MAAO,CACf,KAAK,CAAE,CAAEiB,KAAK,CAAElB,IAAI,CAAEmB,MAAM,CAAEnB,IAAI,CAAEoB,YAAY,CAAEpB,IAAI,CAAG,CAAE,CAAE,CAC7D,OAAO,CAAEG,OAAQ,CACjB,QAAQ,CAAEC,QAAS,CACnB,MAAM,CAAEC,MAAO,CACf,SAAS,CAAEC,SAAU,CACrB,WAAW,CAAEC,WAAY,CACzB,UAAU,CAAEC,UAAW,CACvB,gCAAgC,CAAA,IAAA,CAAA,CAEnC,CACI,CAEX,CAAC,CAEDT,WAAW,CAACsB,WAAW,CAAG,cAAc,CAExC,cAAetB,YAAW","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nconst defaultSize = 64;\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-image.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Image size={24} source={require('../assets/avatar.png')} />\n * );\n * export default MyComponent\n * ```\n */\nconst AvatarImage = _ref => {\n  let {\n    size = defaultSize,\n    source,\n    style,\n    onError,\n    onLayout,\n    onLoad,\n    onLoadEnd,\n    onLoadStart,\n    onProgress,\n    theme: themeOverrides,\n    testID,\n    ...rest\n  } = _ref;\n  const {\n    colors\n  } = useInternalTheme(themeOverrides);\n  const {\n    backgroundColor = colors === null || colors === void 0 ? void 0 : colors.primary\n  } = StyleSheet.flatten(style) || {};\n  return /*#__PURE__*/React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor\n    }, style]\n  }, rest), typeof source === 'function' && source({\n    size\n  }), typeof source !== 'function' && /*#__PURE__*/React.createElement(Image, {\n    testID: testID,\n    source: source,\n    style: {\n      width: size,\n      height: size,\n      borderRadius: size / 2\n    },\n    onError: onError,\n    onLayout: onLayout,\n    onLoad: onLoad,\n    onLoadEnd: onLoadEnd,\n    onLoadStart: onLoadStart,\n    onProgress: onProgress,\n    accessibilityIgnoresInvertColors: true\n  }));\n};\nAvatarImage.displayName = 'Avatar.Image';\nexport default AvatarImage;\n//# sourceMappingURL=AvatarImage.js.map"]},"metadata":{},"sourceType":"module"}