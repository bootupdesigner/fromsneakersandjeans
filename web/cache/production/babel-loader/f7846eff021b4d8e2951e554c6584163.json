{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"icon\",\"size\",\"style\",\"theme\"],_excluded2=[\"backgroundColor\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from\"../../core/theming\";import{white}from\"../../styles/themes/v2/colors\";import getContrastingColor from\"../../utils/getContrastingColor\";import Icon from\"../Icon\";var defaultSize=64;var Avatar=function Avatar(_ref){var _rest$color;var _theme$colors;var icon=_ref.icon,_ref$size=_ref.size,size=_ref$size===void 0?defaultSize:_ref$size,style=_ref.style,themeOverrides=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var _ref2=StyleSheet.flatten(style)||{},_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.primary:_ref2$backgroundColor,restStyle=_objectWithoutProperties(_ref2,_excluded2);var textColor=(_rest$color=rest.color)!=null?_rest$color:getContrastingColor(backgroundColor,white,'rgba(0, 0, 0, .54)');return React.createElement(View,_extends({style:[{width:size,height:size,borderRadius:size/2,backgroundColor:backgroundColor},styles.container,restStyle]},rest),React.createElement(Icon,{source:icon,color:textColor,size:size*0.6}));};Avatar.displayName='Avatar.Icon';var styles=StyleSheet.create({container:{justifyContent:'center',alignItems:'center'}});export default Avatar;","map":{"version":3,"sources":["AvatarIcon.tsx"],"names":["React","useInternalTheme","white","getContrastingColor","Icon","defaultSize","Avatar","icon","size","style","theme","themeOverrides","rest","backgroundColor","colors","primary","restStyle","StyleSheet","flatten","textColor","color","width","height","borderRadius","styles","container","displayName","create","justifyContent","alignItems"],"mappings":"6cAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAAA,sHAG9B,OAASC,gBAAgB,0BACzB,OAASC,KAAK,qCAEd,MAAOC,oBAAmB,uCAC1B,MAAOC,KAAI,eAEX,GAAMC,YAAW,CAAG,EAAE,CAyCtB,GAAMC,OAAM,CAAG,QAATA,OAAM,CAAG,IAAA,CAMF,iBAAA,GAAA,cAAA,CANG,GACdC,KAAI,CAKE,IAAA,CALNA,IAAI,WAKE,IAAA,CAJNC,IAAI,CAAJA,IAAI,oBAAGH,WAAW,WAClBI,KAAK,CAGC,IAAA,CAHNA,KAAK,CACEE,cAAc,CAEf,IAAA,CAFND,KAAK,CACFE,IAAAA,0BACG,IAAA,YACN,GAAMF,MAAK,CAAGT,gBAAgB,CAACU,cAAc,CAAC,CAC9C,UACEM,UAAU,CAACC,OAAO,CAACT,KAAK,CAAC,EAAI,CAAC,CAAC,6BADzBI,eAAe,CAAfA,eAAe,gCAAA,CAAA,aAAA,CAAGH,KAAK,CAACI,MAAM,IAAA,IAAA,EAAA,aAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAZJ,aAAAA,CAAcK,OAAO,uBAAKC,SAAAA,4CAEpD,GAAMG,UAAS,cACbP,IAAI,CAACQ,KAAK,oBACVjB,mBAAmB,CAACU,eAAe,CAAEX,KAAK,CAAE,oBAAoB,CAAC,CAEnE,MACE,MAAA,CAAA,aAAA,CAAC,IAAI,CAAA,QAAA,CAAA,CACH,KAAK,CAAE,CACL,CACEmB,KAAK,CAAEb,IAAI,CACXc,MAAM,CAAEd,IAAI,CACZe,YAAY,CAAEf,IAAI,CAAG,CAAC,CACtBK,eAAAA,CAAAA,eACF,CAAC,CACDW,MAAM,CAACC,SAAS,CAChBT,SAAS,CACT,CAAA,CACEJ,IAAI,CAAA,CAER,KAAA,CAAA,aAAA,CAAC,IAAI,CAAA,CAAC,MAAM,CAAEL,IAAK,CAAC,KAAK,CAAEY,SAAU,CAAC,IAAI,CAAEX,IAAI,CAAG,GAAI,CAAA,CAAG,CACrD,CAEX,CAAC,CAEDF,MAAM,CAACoB,WAAW,CAAG,aAAa,CAElC,GAAMF,OAAM,CAAGP,UAAU,CAACU,MAAM,CAAC,CAC/BF,SAAS,CAAE,CACTG,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QACd,CACF,CAAC,CAAC,CAEF,cAAevB,OAAM","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport getContrastingColor from '../../utils/getContrastingColor';\nimport Icon from '../Icon';\nconst defaultSize = 64;\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Icon size={24} icon=\"folder\" />\n * );\n * ```\n */\nconst Avatar = _ref => {\n  var _theme$colors;\n  let {\n    icon,\n    size = defaultSize,\n    style,\n    theme: themeOverrides,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    backgroundColor = (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.primary,\n    ...restStyle\n  } = StyleSheet.flatten(style) || {};\n  const textColor = rest.color ?? getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n  return /*#__PURE__*/React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor\n    }, styles.container, restStyle]\n  }, rest), /*#__PURE__*/React.createElement(Icon, {\n    source: icon,\n    color: textColor,\n    size: size * 0.6\n  }));\n};\nAvatar.displayName = 'Avatar.Icon';\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default Avatar;\n//# sourceMappingURL=AvatarIcon.js.map"]},"metadata":{},"sourceType":"module"}