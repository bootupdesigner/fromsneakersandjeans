{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _OrientationLockAPITo,_OrientationWebToAPI;import{SyntheticPlatformEmitter,Platform}from'expo-modules-core';import{getOrientationLockAsync,getOrientationAsync}from\"./ScreenOrientation\";import{Orientation,OrientationLock,WebOrientationLock,WebOrientation}from\"./ScreenOrientation.types\";var OrientationLockAPIToWeb=(_OrientationLockAPITo={},_defineProperty(_OrientationLockAPITo,OrientationLock.DEFAULT,WebOrientationLock.NATURAL),_defineProperty(_OrientationLockAPITo,OrientationLock.ALL,WebOrientationLock.ANY),_defineProperty(_OrientationLockAPITo,OrientationLock.PORTRAIT,WebOrientationLock.PORTRAIT),_defineProperty(_OrientationLockAPITo,OrientationLock.PORTRAIT_UP,WebOrientationLock.PORTRAIT_PRIMARY),_defineProperty(_OrientationLockAPITo,OrientationLock.PORTRAIT_DOWN,WebOrientationLock.PORTRAIT_SECONDARY),_defineProperty(_OrientationLockAPITo,OrientationLock.LANDSCAPE,WebOrientationLock.LANDSCAPE),_defineProperty(_OrientationLockAPITo,OrientationLock.LANDSCAPE_LEFT,WebOrientationLock.LANDSCAPE_PRIMARY),_defineProperty(_OrientationLockAPITo,OrientationLock.LANDSCAPE_RIGHT,WebOrientationLock.LANDSCAPE_SECONDARY),_OrientationLockAPITo);var OrientationWebToAPI=(_OrientationWebToAPI={},_defineProperty(_OrientationWebToAPI,WebOrientation.PORTRAIT_PRIMARY,Orientation.PORTRAIT_UP),_defineProperty(_OrientationWebToAPI,WebOrientation.PORTRAIT_SECONDARY,Orientation.PORTRAIT_DOWN),_defineProperty(_OrientationWebToAPI,WebOrientation.LANDSCAPE_PRIMARY,Orientation.LANDSCAPE_LEFT),_defineProperty(_OrientationWebToAPI,WebOrientation.LANDSCAPE_SECONDARY,Orientation.LANDSCAPE_RIGHT),_OrientationWebToAPI);var screen=Platform.canUseViewport?window.screen:{};var orientation=Platform.canUseViewport?screen.orientation||screen.msOrientation||null:null;function emitOrientationEvent(){return _emitOrientationEvent.apply(this,arguments);}function _emitOrientationEvent(){_emitOrientationEvent=_asyncToGenerator(function*(){var _yield$Promise$all=yield Promise.all([getOrientationLockAsync(),getOrientationAsync()]),_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2),orientationLock=_yield$Promise$all2[0],orientation=_yield$Promise$all2[1];SyntheticPlatformEmitter.emit('expoDidUpdateDimensions',{orientationLock:orientationLock,orientationInfo:{orientation:orientation}});});return _emitOrientationEvent.apply(this,arguments);}if(Platform.canUseEventListeners){if(orientation&&orientation.addEventListener){orientation.addEventListener('change',emitOrientationEvent);}else{window.addEventListener('orientationchange',emitOrientationEvent);}}function _convertToLegacyOrientationLock(orientationLock){switch(orientationLock){case WebOrientationLock.UNKNOWN:throw new Error(\"expo-screen-orientation: WebOrientationLock.UNKNOWN is not a valid lock to be converted.\");case WebOrientationLock.ANY:return['portrait','landscape'];case WebOrientationLock.NATURAL:return'default';default:return orientationLock;}}function _lockAsync(_x){return _lockAsync2.apply(this,arguments);}function _lockAsync2(){_lockAsync2=_asyncToGenerator(function*(webOrientationLock){if(webOrientationLock===WebOrientationLock.UNKNOWN){throw new Error(\"expo-screen-orientation: WebOrientationLock.UNKNOWN is not a valid lock that can be applied to the device.\");}if(screen.orientation&&screen.orientation.lock){yield screen.orientation.lock(webOrientationLock);}else if(screen['lockOrientation']||screen['mozLockOrientation']||screen['msLockOrientation']){var legacyLock=_convertToLegacyOrientationLock(webOrientationLock);var lockOrientation=screen['lockOrientation']||screen['mozLockOrientation']||screen['msLockOrientation'];var isSuccess=lockOrientation.call(screen,legacyLock);if(!isSuccess){throw new Error(\"Applying orientation lock: \"+JSON.stringify(webOrientationLock)+\" to device was denied\");}}else{throw new Error(\"expo-screen-orientation: The browser doesn't support locking screen orientation.\");}});return _lockAsync2.apply(this,arguments);}var _lastWebOrientationLock=WebOrientationLock.UNKNOWN;export default{get name(){return'ExpoScreenOrientation';},supportsOrientationLockAsync:function(){var _supportsOrientationLockAsync=_asyncToGenerator(function*(orientationLock){return orientationLock in OrientationLockAPIToWeb;});function supportsOrientationLockAsync(_x2){return _supportsOrientationLockAsync.apply(this,arguments);}return supportsOrientationLockAsync;}(),getPlatformOrientationLockAsync:function(){var _getPlatformOrientationLockAsync=_asyncToGenerator(function*(){return _lastWebOrientationLock;});function getPlatformOrientationLockAsync(){return _getPlatformOrientationLockAsync.apply(this,arguments);}return getPlatformOrientationLockAsync;}(),getOrientationAsync:function(){var _getOrientationAsync=_asyncToGenerator(function*(){var webOrientation=screen['msOrientation']||(screen.orientation||screen['mozOrientation']||{}).type;if(!webOrientation){return Orientation.UNKNOWN;}return OrientationWebToAPI[webOrientation];});function getOrientationAsync(){return _getOrientationAsync.apply(this,arguments);}return getOrientationAsync;}(),lockAsync:function(){var _lockAsync3=_asyncToGenerator(function*(orientationLock){var webOrientationLock=OrientationLockAPIToWeb[orientationLock];if(!webOrientationLock){throw new TypeError(\"Invalid Orientation Lock: \"+orientationLock);}yield _lockAsync(webOrientationLock);});function lockAsync(_x3){return _lockAsync3.apply(this,arguments);}return lockAsync;}(),lockPlatformAsync:function(){var _lockPlatformAsync=_asyncToGenerator(function*(webOrientationLock){yield _lockAsync(webOrientationLock);_lastWebOrientationLock=webOrientationLock;});function lockPlatformAsync(_x4){return _lockPlatformAsync.apply(this,arguments);}return lockPlatformAsync;}(),unlockAsync:function(){var _unlockAsync=_asyncToGenerator(function*(){if(screen.orientation&&screen.orientation.unlock){screen.orientation.unlock();}else if(screen['unlockOrientation']||screen['mozUnlockOrientation']||screen['msUnlockOrientation']){var unlockOrientation=screen['unlockOrientation']||screen['mozUnlockOrientation']||screen['msUnlockOrientation'];var isSuccess=unlockOrientation.call(screen);if(!isSuccess){throw new Error(\"Unlocking screen orientation on device was denied\");}}else{throw new Error(\"expo-screen-orientation: The browser doesn't support unlocking screen orientation.\");}});function unlockAsync(){return _unlockAsync.apply(this,arguments);}return unlockAsync;}()};","map":{"version":3,"sources":["../src/ExpoScreenOrientation.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { SyntheticPlatformEmitter, Platform } from 'expo-modules-core';\n\nimport { getOrientationLockAsync, getOrientationAsync } from './ScreenOrientation';\nimport {\n  Orientation,\n  OrientationLock,\n  WebOrientationLock,\n  WebOrientation,\n} from './ScreenOrientation.types';\n\nconst OrientationLockAPIToWeb: {\n  [lock: string]: WebOrientationLock;\n} = {\n  [OrientationLock.DEFAULT]: WebOrientationLock.NATURAL,\n  [OrientationLock.ALL]: WebOrientationLock.ANY,\n  [OrientationLock.PORTRAIT]: WebOrientationLock.PORTRAIT,\n  [OrientationLock.PORTRAIT_UP]: WebOrientationLock.PORTRAIT_PRIMARY,\n  [OrientationLock.PORTRAIT_DOWN]: WebOrientationLock.PORTRAIT_SECONDARY,\n  [OrientationLock.LANDSCAPE]: WebOrientationLock.LANDSCAPE,\n  [OrientationLock.LANDSCAPE_LEFT]: WebOrientationLock.LANDSCAPE_PRIMARY,\n  [OrientationLock.LANDSCAPE_RIGHT]: WebOrientationLock.LANDSCAPE_SECONDARY,\n};\n\nconst OrientationWebToAPI: {\n  [orientationWeb: string]: Orientation;\n} = {\n  [WebOrientation.PORTRAIT_PRIMARY]: Orientation.PORTRAIT_UP,\n  [WebOrientation.PORTRAIT_SECONDARY]: Orientation.PORTRAIT_DOWN,\n  [WebOrientation.LANDSCAPE_PRIMARY]: Orientation.LANDSCAPE_LEFT,\n  [WebOrientation.LANDSCAPE_SECONDARY]: Orientation.LANDSCAPE_RIGHT,\n};\n\ndeclare const window: Window;\n\nconst screen: Screen = Platform.canUseViewport ? window.screen : ({} as Screen);\nconst orientation: ScreenOrientation | null = Platform.canUseViewport\n  ? screen.orientation || (screen as any).msOrientation || null\n  : null;\n\nasync function emitOrientationEvent() {\n  const [orientationLock, orientation] = await Promise.all([\n    getOrientationLockAsync(),\n    getOrientationAsync(),\n  ]);\n  SyntheticPlatformEmitter.emit('expoDidUpdateDimensions', {\n    orientationLock,\n    orientationInfo: { orientation },\n  });\n}\n\nif (Platform.canUseEventListeners) {\n  if (orientation && orientation.addEventListener) {\n    orientation.addEventListener('change', emitOrientationEvent);\n  } else {\n    window.addEventListener('orientationchange', emitOrientationEvent);\n  }\n}\n\nfunction _convertToLegacyOrientationLock(orientationLock: WebOrientationLock): string | string[] {\n  switch (orientationLock) {\n    case WebOrientationLock.UNKNOWN:\n      throw new Error(\n        `expo-screen-orientation: WebOrientationLock.UNKNOWN is not a valid lock to be converted.`\n      );\n    case WebOrientationLock.ANY:\n      return ['portrait', 'landscape'];\n    case WebOrientationLock.NATURAL:\n      return 'default';\n    default:\n      return orientationLock;\n  }\n}\n\nasync function _lockAsync(webOrientationLock: WebOrientationLock): Promise<void> {\n  if (webOrientationLock === WebOrientationLock.UNKNOWN) {\n    throw new Error(\n      `expo-screen-orientation: WebOrientationLock.UNKNOWN is not a valid lock that can be applied to the device.`\n    );\n  }\n  if (screen.orientation && screen.orientation.lock) {\n    await screen.orientation.lock(webOrientationLock);\n  } else if (\n    screen['lockOrientation'] ||\n    screen['mozLockOrientation'] ||\n    screen['msLockOrientation']\n  ) {\n    const legacyLock = _convertToLegacyOrientationLock(webOrientationLock);\n    const lockOrientation =\n      screen['lockOrientation'] || screen['mozLockOrientation'] || screen['msLockOrientation'];\n    // correct `this` context must be passed in otherwise method call is disallowed by browser\n    const isSuccess = lockOrientation.call(screen, legacyLock);\n    if (!isSuccess) {\n      throw new Error(\n        `Applying orientation lock: ${JSON.stringify(webOrientationLock)} to device was denied`\n      );\n    }\n  } else {\n    throw new Error(\n      `expo-screen-orientation: The browser doesn't support locking screen orientation.`\n    );\n  }\n}\n\nlet _lastWebOrientationLock: WebOrientationLock = WebOrientationLock.UNKNOWN;\n\nexport default {\n  get name(): string {\n    return 'ExpoScreenOrientation';\n  },\n  async supportsOrientationLockAsync(orientationLock: OrientationLock): Promise<boolean> {\n    return orientationLock in OrientationLockAPIToWeb;\n  },\n  async getPlatformOrientationLockAsync(): Promise<WebOrientationLock> {\n    return _lastWebOrientationLock;\n  },\n  async getOrientationAsync(): Promise<Orientation> {\n    const webOrientation =\n      screen['msOrientation'] || (screen.orientation || screen['mozOrientation'] || {}).type;\n    if (!webOrientation) {\n      return Orientation.UNKNOWN;\n    }\n    return OrientationWebToAPI[webOrientation];\n  },\n  async lockAsync(orientationLock: OrientationLock): Promise<void> {\n    const webOrientationLock = OrientationLockAPIToWeb[orientationLock];\n    if (!webOrientationLock) {\n      throw new TypeError(`Invalid Orientation Lock: ${orientationLock}`);\n    }\n    await _lockAsync(webOrientationLock);\n  },\n  async lockPlatformAsync(webOrientationLock: WebOrientationLock): Promise<void> {\n    await _lockAsync(webOrientationLock);\n    _lastWebOrientationLock = webOrientationLock;\n  },\n  async unlockAsync(): Promise<void> {\n    if (screen.orientation && screen.orientation.unlock) {\n      screen.orientation.unlock();\n    } else if (\n      screen['unlockOrientation'] ||\n      screen['mozUnlockOrientation'] ||\n      screen['msUnlockOrientation']\n    ) {\n      const unlockOrientation =\n        screen['unlockOrientation'] ||\n        screen['mozUnlockOrientation'] ||\n        screen['msUnlockOrientation'];\n      // correct `this` context must be passed in otherwise method call is disallowed by browser\n      const isSuccess = unlockOrientation.call(screen);\n      if (!isSuccess) {\n        throw new Error(`Unlocking screen orientation on device was denied`);\n      }\n    } else {\n      throw new Error(\n        `expo-screen-orientation: The browser doesn't support unlocking screen orientation.`\n      );\n    }\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}