{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"theme\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import{useInternalTheme}from\"../../core/theming\";import CheckboxAndroid from\"./CheckboxAndroid\";import CheckboxIOS from\"./CheckboxIOS\";var Checkbox=function Checkbox(_ref){var themeOverrides=_ref.theme,props=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);return Platform.OS==='ios'?React.createElement(CheckboxIOS,_extends({},props,{theme:theme})):React.createElement(CheckboxAndroid,_extends({},props,{theme:theme}));};export default Checkbox;var CheckboxWithTheme=Checkbox;export{CheckboxWithTheme as Checkbox};","map":{"version":3,"sources":["Checkbox.tsx"],"names":["React","useInternalTheme","CheckboxAndroid","CheckboxIOS","Checkbox","theme","themeOverrides","props","Platform","OS","CheckboxWithTheme"],"mappings":"wZAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAAA,6DAG9B,OAASC,gBAAgB,0BAEzB,MAAOC,gBAAe,yBACtB,MAAOC,YAAW,qBA4ElB,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,CAAG,IAAA,CAAgD,CAA/C,GAASE,eAAc,CAAmB,IAAA,CAAxCD,KAAK,CAAqBE,KAAAA,0BAAc,IAAA,YAC1D,GAAMF,MAAK,CAAGJ,gBAAgB,CAACK,cAAc,CAAC,CAC9C,MAAOE,SAAQ,CAACC,EAAE,GAAK,KAAK,CAC1B,KAAA,CAAA,aAAA,CAAC,WAAW,CAAA,QAAA,CAAA,CAAA,CAAA,CAAKF,KAAK,CAAA,CAAE,KAAK,CAAEF,KAAM,CAAA,CAAA,CAAG,CAExC,KAAA,CAAA,aAAA,CAAC,eAAe,CAAA,QAAA,CAAA,CAAA,CAAA,CAAKE,KAAK,CAAA,CAAE,KAAK,CAAEF,KAAM,CAAA,CAAA,CAC1C,CACH,CAAC,CAED,cAAeD,SAAQ,CAGvB,GAAMM,kBAAiB,CAAGN,QAAQ,CAElC,OAASM,iBAAiB,GAAIN,SAAQ","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [checked, setChecked] = React.useState(false);\n *\n *   return (\n *     <Checkbox\n *       status={checked ? 'checked' : 'unchecked'}\n *       onPress={() => {\n *         setChecked(!checked);\n *       }}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Checkbox = _ref => {\n  let {\n    theme: themeOverrides,\n    ...props\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  return Platform.OS === 'ios' ? /*#__PURE__*/React.createElement(CheckboxIOS, _extends({}, props, {\n    theme: theme\n  })) : /*#__PURE__*/React.createElement(CheckboxAndroid, _extends({}, props, {\n    theme: theme\n  }));\n};\nexport default Checkbox;\n\n// @component-docs ignore-next-line\nconst CheckboxWithTheme = Checkbox;\n// @component-docs ignore-next-line\nexport { CheckboxWithTheme as Checkbox };\n//# sourceMappingURL=Checkbox.js.map"]},"metadata":{},"sourceType":"module"}