{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"size\",\"color\",\"icon\",\"disabled\",\"onPress\",\"accessibilityLabel\",\"isLeading\",\"theme\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import color from'color';import{useInternalTheme}from\"../../core/theming\";import{black}from\"../../styles/themes/v2/colors\";import{forwardRef}from\"../../utils/forwardRef\";import IconButton from\"../IconButton/IconButton\";var AppbarAction=forwardRef(function(_ref,ref){var _ref$size=_ref.size,size=_ref$size===void 0?24:_ref$size,iconColor=_ref.color,icon=_ref.icon,disabled=_ref.disabled,onPress=_ref.onPress,accessibilityLabel=_ref.accessibilityLabel,isLeading=_ref.isLeading,themeOverrides=_ref.theme,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var actionIconColor=iconColor?iconColor:theme.isV3?isLeading?theme.colors.onSurface:theme.colors.onSurfaceVariant:color(black).alpha(0.54).rgb().string();return React.createElement(IconButton,_extends({size:size,onPress:onPress,iconColor:actionIconColor,icon:icon,disabled:disabled,accessibilityLabel:accessibilityLabel,animated:true,ref:ref},rest));});AppbarAction.displayName='Appbar.Action';export default AppbarAction;export{AppbarAction};","map":{"version":3,"sources":["AppbarAction.tsx"],"names":["React","color","useInternalTheme","black","forwardRef","IconButton","AppbarAction","size","iconColor","icon","disabled","onPress","accessibilityLabel","isLeading","theme","themeOverrides","rest","ref","actionIconColor","isV3","colors","onSurface","onSurfaceVariant","alpha","rgb","string","displayName"],"mappings":"oeAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAG9B,MAAOC,MAAK,KAAM,OAAO,CAGzB,OAASC,gBAAgB,0BACzB,OAASC,KAAK,qCACd,OAASC,UAAU,8BAEnB,MAAOC,WAAU,gCAkEjB,GAAMC,aAAY,CAAGF,UAAU,CAC7B,SAAA,IAAA,CAYEa,GAAG,CACA,CAZH,cAUQ,IAAA,CATNV,IAAI,CAAJA,IAAI,oBAAG,EAAE,WACFC,SAAS,CAQV,IAAA,CARNP,KAAK,CACLQ,IAAI,CAOE,IAAA,CAPNA,IAAI,CACJC,QAAQ,CAMF,IAAA,CANNA,QAAQ,CACRC,OAAO,CAKD,IAAA,CALNA,OAAO,CACPC,kBAAkB,CAIZ,IAAA,CAJNA,kBAAkB,CAClBC,SAAS,CAGH,IAAA,CAHNA,SAAS,CACFE,cAAc,CAEf,IAAA,CAFND,KAAK,CACFE,IAAAA,0BACG,IAAA,YAGR,GAAMF,MAAK,CAAGZ,gBAAgB,CAACa,cAAc,CAAC,CAE9C,GAAMG,gBAAe,CAAGV,SAAS,CAC7BA,SAAS,CACTM,KAAK,CAACK,IAAI,CACVN,SAAS,CACPC,KAAK,CAACM,MAAM,CAACC,SAAS,CACtBP,KAAK,CAACM,MAAM,CAACE,gBAAgB,CAC/BrB,KAAK,CAACE,KAAK,CAAC,CAACoB,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,EAAE,CAACC,MAAM,EAAE,CAE3C,MACE,MAAA,CAAA,aAAA,CAAC,UAAU,CAAA,QAAA,CAAA,CACT,IAAI,CAAElB,IAAK,CACX,OAAO,CAAEI,OAAQ,CACjB,SAAS,CAAEO,eAAgB,CAC3B,IAAI,CAAET,IAAK,CACX,QAAQ,CAAEC,QAAS,CACnB,kBAAkB,CAAEE,kBAAmB,CACvC,QAAQ,CAAA,IAAA,CACR,GAAG,CAAEK,GAAI,CAAA,CACLD,IAAI,CAAA,CACR,CAEN,CAAC,CACF,CAEDV,YAAY,CAACoB,WAAW,CAAG,eAAe,CAE1C,cAAepB,aAAY,CAG3B,OAASA,YAAY","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport color from 'color';\nimport { useInternalTheme } from '../../core/theming';\nimport { black } from '../../styles/themes/v2/colors';\nimport { forwardRef } from '../../utils/forwardRef';\nimport IconButton from '../IconButton/IconButton';\n/**\n * A component used to display an action item in the appbar.\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/appbar-action-android.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { Platform } from 'react-native';\n *\n * const MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *         <Appbar.Action icon=\"magnify\" onPress={() => {}} />\n *         <Appbar.Action icon={MORE_ICON} onPress={() => {}} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarAction = forwardRef((_ref, ref) => {\n  let {\n    size = 24,\n    color: iconColor,\n    icon,\n    disabled,\n    onPress,\n    accessibilityLabel,\n    isLeading,\n    theme: themeOverrides,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const actionIconColor = iconColor ? iconColor : theme.isV3 ? isLeading ? theme.colors.onSurface : theme.colors.onSurfaceVariant : color(black).alpha(0.54).rgb().string();\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    size: size,\n    onPress: onPress,\n    iconColor: actionIconColor,\n    icon: icon,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    animated: true,\n    ref: ref\n  }, rest));\n});\nAppbarAction.displayName = 'Appbar.Action';\nexport default AppbarAction;\n\n// @component-docs ignore-next-line\nexport { AppbarAction };\n//# sourceMappingURL=AppbarAction.js.map"]},"metadata":{},"sourceType":"module"}