{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"disabled\",\"onPress\",\"theme\",\"status\",\"value\",\"testID\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from\"../../core/theming\";import{getSelectionControlIOSColor}from\"../Checkbox/utils\";import MaterialCommunityIcon from\"../MaterialCommunityIcon\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import{RadioButtonContext}from\"./RadioButtonGroup\";import{handlePress,isChecked}from\"./utils\";var RadioButtonIOS=function RadioButtonIOS(_ref){var disabled=_ref.disabled,onPress=_ref.onPress,themeOverrides=_ref.theme,status=_ref.status,value=_ref.value,testID=_ref.testID,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);return React.createElement(RadioButtonContext.Consumer,null,function(context){var checked=isChecked({contextValue:context===null||context===void 0?void 0:context.value,status:status,value:value})==='checked';var _getSelectionControlI=getSelectionControlIOSColor({theme:theme,disabled:disabled,customColor:rest.color}),checkedColor=_getSelectionControlI.checkedColor,rippleColor=_getSelectionControlI.rippleColor;var opacity=checked?1:0;return React.createElement(TouchableRipple,_extends({},rest,{borderless:true,rippleColor:rippleColor,onPress:disabled?undefined:function(event){handlePress({onPress:onPress,value:value,onValueChange:context===null||context===void 0?void 0:context.onValueChange,event:event});},accessibilityRole:\"radio\",accessibilityState:{disabled:disabled,checked:checked},accessibilityLiveRegion:\"polite\",style:styles.container,testID:testID,theme:theme}),React.createElement(View,{style:{opacity:opacity}},React.createElement(MaterialCommunityIcon,{allowFontScaling:false,name:\"check\",size:24,color:checkedColor,direction:\"ltr\"})));});};RadioButtonIOS.displayName='RadioButton.IOS';var styles=StyleSheet.create({container:{borderRadius:18,padding:6}});export default RadioButtonIOS;export{RadioButtonIOS};","map":{"version":3,"sources":["RadioButtonIOS.tsx"],"names":["React","useInternalTheme","getSelectionControlIOSColor","MaterialCommunityIcon","TouchableRipple","RadioButtonContext","handlePress","isChecked","RadioButtonIOS","disabled","onPress","theme","themeOverrides","status","value","testID","rest","context","checked","contextValue","checkedColor","rippleColor","customColor","color","opacity","undefined","event","onValueChange","styles","container","displayName","StyleSheet","create","borderRadius","padding"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport { getSelectionControlIOSColor } from '../Checkbox/utils';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { RadioButtonContext } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for iOS, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nconst RadioButtonIOS = _ref => {\n  let {\n    disabled,\n    onPress,\n    theme: themeOverrides,\n    status,\n    value,\n    testID,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  return /*#__PURE__*/React.createElement(RadioButtonContext.Consumer, null, context => {\n    const checked = isChecked({\n      contextValue: context === null || context === void 0 ? void 0 : context.value,\n      status,\n      value\n    }) === 'checked';\n    const {\n      checkedColor,\n      rippleColor\n    } = getSelectionControlIOSColor({\n      theme,\n      disabled,\n      customColor: rest.color\n    });\n    const opacity = checked ? 1 : 0;\n    return /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n      borderless: true,\n      rippleColor: rippleColor,\n      onPress: disabled ? undefined : event => {\n        handlePress({\n          onPress,\n          value,\n          onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange,\n          event\n        });\n      },\n      accessibilityRole: \"radio\",\n      accessibilityState: {\n        disabled,\n        checked\n      },\n      accessibilityLiveRegion: \"polite\",\n      style: styles.container,\n      testID: testID,\n      theme: theme\n    }), /*#__PURE__*/React.createElement(View, {\n      style: {\n        opacity\n      }\n    }, /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n      allowFontScaling: false,\n      name: \"check\",\n      size: 24,\n      color: checkedColor,\n      direction: \"ltr\"\n    })));\n  });\n};\nRadioButtonIOS.displayName = 'RadioButton.IOS';\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6\n  }\n});\nexport default RadioButtonIOS;\n\n// @component-docs ignore-next-line\nexport { RadioButtonIOS };\n//# sourceMappingURL=RadioButtonIOS.js.map"]},"metadata":{},"sourceType":"module"}