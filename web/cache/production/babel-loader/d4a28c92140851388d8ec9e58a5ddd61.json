{"ast":null,"code":"import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{useInternalTheme}from\"../../core/theming\";import overlay from\"../../styles/overlay\";import Modal from\"../Modal\";import DialogActions from\"./DialogActions\";import DialogContent from\"./DialogContent\";import DialogIcon from\"./DialogIcon\";import DialogScrollArea from\"./DialogScrollArea\";import DialogTitle from\"./DialogTitle\";var DIALOG_ELEVATION=24;var Dialog=function Dialog(_ref){var children=_ref.children,_ref$dismissable=_ref.dismissable,dismissable=_ref$dismissable===void 0?true:_ref$dismissable,onDismiss=_ref.onDismiss,_ref$visible=_ref.visible,visible=_ref$visible===void 0?false:_ref$visible,style=_ref.style,themeOverrides=_ref.theme;var theme=useInternalTheme(themeOverrides);var isV3=theme.isV3,dark=theme.dark,mode=theme.mode,colors=theme.colors,roundness=theme.roundness;var borderRadius=(isV3?7:1)*roundness;var backgroundColorV2=dark&&mode==='adaptive'?overlay(DIALOG_ELEVATION,colors===null||colors===void 0?void 0:colors.surface):colors===null||colors===void 0?void 0:colors.surface;var backgroundColor=isV3?theme.colors.elevation.level3:backgroundColorV2;return React.createElement(Modal,{dismissable:dismissable,onDismiss:onDismiss,visible:visible,contentContainerStyle:[{borderRadius:borderRadius,backgroundColor:backgroundColor},styles.container,style],theme:theme},React.Children.toArray(children).filter(function(child){return child!=null&&typeof child!=='boolean';}).map(function(child,i){if(isV3){if(i===0&&React.isValidElement(child)){return React.cloneElement(child,{style:[{marginTop:24},child.props.style]});}}if(i===0&&React.isValidElement(child)&&child.type===DialogContent){return React.cloneElement(child,{style:[{paddingTop:24},child.props.style]});}return child;}));};Dialog.Content=DialogContent;Dialog.Actions=DialogActions;Dialog.Title=DialogTitle;Dialog.ScrollArea=DialogScrollArea;Dialog.Icon=DialogIcon;var styles=StyleSheet.create({container:{marginVertical:Platform.OS==='android'?44:0,marginHorizontal:26,elevation:DIALOG_ELEVATION,justifyContent:'flex-start'}});export default Dialog;","map":{"version":3,"sources":["Dialog.tsx"],"names":["React","useInternalTheme","overlay","Modal","DialogActions","DialogContent","DialogIcon","DialogScrollArea","DialogTitle","DIALOG_ELEVATION","Dialog","children","dismissable","onDismiss","visible","style","theme","themeOverrides","isV3","dark","mode","colors","roundness","borderRadius","backgroundColorV2","surface","backgroundColor","elevation","level3","styles","container","Children","toArray","filter","child","map","i","isValidElement","cloneElement","marginTop","props","type","paddingTop","Content","Actions","Title","ScrollArea","Icon","StyleSheet","create","marginVertical","Platform","OS","marginHorizontal","justifyContent"],"mappings":"AAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAAA,8HAS9B,OAASC,gBAAgB,0BACzB,MAAOC,QAAO,4BAEd,MAAOC,MAAK,gBACZ,MAAOC,cAAa,uBACpB,MAAOC,cAAa,uBACpB,MAAOC,WAAU,oBACjB,MAAOC,iBAAgB,0BACvB,MAAOC,YAAW,qBA0BlB,GAAMC,iBAAwB,CAAG,EAAE,CA+CnC,GAAMC,OAAM,CAAG,QAATA,OAAM,CAAG,IAAA,CAOF,CAPG,GACdC,SAAQ,CAMF,IAAA,CANNA,QAAQ,kBAMF,IAAA,CALNC,WAAW,CAAXA,WAAW,2BAAG,IAAI,kBAClBC,SAAS,CAIH,IAAA,CAJNA,SAAS,cAIH,IAAA,CAHNC,OAAO,CAAPA,OAAO,uBAAG,KAAK,cACfC,KAAK,CAEC,IAAA,CAFNA,KAAK,CACEE,cAAAA,CACD,IAAA,CADND,KAAK,CAEL,GAAMA,MAAK,CAAGf,gBAAgB,CAACgB,cAAc,CAAC,CAC9C,GAAQC,KAAI,CAAoCF,KAAK,CAA7CE,IAAI,CAAEC,IAAI,CAA8BH,KAAK,CAAvCG,IAAI,CAAEC,IAAI,CAAwBJ,KAAK,CAAjCI,IAAI,CAAEC,MAAM,CAAgBL,KAAK,CAA3BK,MAAM,CAAEC,SAAAA,CAAcN,KAAK,CAAnBM,SAAAA,CAClC,GAAMC,aAAY,CAAG,CAACL,IAAI,CAAG,CAAC,CAAG,CAAC,EAAII,SAAS,CAE/C,GAAME,kBAAiB,CACrBL,IAAI,EAAIC,IAAI,GAAK,UAAU,CACvBlB,OAAO,CAACO,gBAAgB,CAAEY,MAAM,GAAA,IAAA,EAANA,MAAM,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAANA,MAAM,CAAEI,OAAO,CAAC,CAC1CJ,MAAM,GAAA,IAAA,EAANA,MAAM,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAANA,MAAM,CAAEI,OAAO,CACrB,GAAMC,gBAAe,CAAGR,IAAI,CACxBF,KAAK,CAACK,MAAM,CAACM,SAAS,CAACC,MAAM,CAC7BJ,iBAAiB,CAErB,MACE,MAAA,CAAA,aAAA,CAAC,KAAK,CAAA,CACJ,WAAW,CAAEZ,WAAY,CACzB,SAAS,CAAEC,SAAU,CACrB,OAAO,CAAEC,OAAQ,CACjB,qBAAqB,CAAE,CACrB,CACES,YAAY,CAAZA,YAAY,CACZG,eAAAA,CAAAA,eACF,CAAC,CACDG,MAAM,CAACC,SAAS,CAChBf,KAAK,CACL,CACF,KAAK,CAAEC,KAAM,CAAA,CAEZhB,KAAK,CAAC+B,QAAQ,CAACC,OAAO,CAACrB,QAAQ,CAAC,CAC9BsB,MAAM,CAAEC,SAAAA,KAAK,QAAKA,MAAK,EAAI,IAAI,EAAI,MAAOA,MAAK,GAAK,SAAS,GAAC,CAC9DC,GAAG,CAAC,SAACD,KAAK,CAAEE,CAAC,CAAK,CACjB,GAAIlB,IAAI,CAAE,CACR,GAAIkB,CAAC,GAAK,CAAC,EAAIpC,KAAK,CAACqC,cAAc,CAACH,KAAK,CAAC,CAAE,CAC1C,MAAOlC,MAAK,CAACsC,YAAY,CAACJ,KAAK,CAA6B,CAC1DnB,KAAK,CAAE,CAAC,CAAEwB,SAAS,CAAE,EAAG,CAAC,CAAEL,KAAK,CAACM,KAAK,CAACzB,KAAK,CAC9C,CAAC,CAAC,CACJ,CACF,CAEA,GACEqB,CAAC,GAAK,CAAC,EACPpC,KAAK,CAACqC,cAAc,CAACH,KAAK,CAAC,EAC3BA,KAAK,CAACO,IAAI,GAAKpC,aAAa,CAC5B,CAEA,MAAOL,MAAK,CAACsC,YAAY,CAACJ,KAAK,CAA6B,CAC1DnB,KAAK,CAAE,CAAC,CAAE2B,UAAU,CAAE,EAAG,CAAC,CAAER,KAAK,CAACM,KAAK,CAACzB,KAAK,CAC/C,CAAC,CAAC,CACJ,CAEA,MAAOmB,MAAK,CACd,CAAC,CAAC,CACE,CAEZ,CAAC,CAGDxB,MAAM,CAACiC,OAAO,CAAGtC,aAAa,CAE9BK,MAAM,CAACkC,OAAO,CAAGxC,aAAa,CAE9BM,MAAM,CAACmC,KAAK,CAAGrC,WAAW,CAE1BE,MAAM,CAACoC,UAAU,CAAGvC,gBAAgB,CAEpCG,MAAM,CAACqC,IAAI,CAAGzC,UAAU,CAExB,GAAMuB,OAAM,CAAGmB,UAAU,CAACC,MAAM,CAAC,CAC/BnB,SAAS,CAAE,CAQToB,cAAc,CAAEC,QAAQ,CAACC,EAAE,GAAK,SAAS,CAAG,EAAE,CAAG,CAAC,CAClDC,gBAAgB,CAAE,EAAE,CACpB1B,SAAS,CAAElB,gBAAgB,CAC3B6C,cAAc,CAAE,YAClB,CACF,CAAC,CAAC,CAEF,cAAe5C,OAAM","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport overlay from '../../styles/overlay';\nimport Modal from '../Modal';\nimport DialogActions from './DialogActions';\nimport DialogContent from './DialogContent';\nimport DialogIcon from './DialogIcon';\nimport DialogScrollArea from './DialogScrollArea';\nimport DialogTitle from './DialogTitle';\nconst DIALOG_ELEVATION = 24;\n\n/**\n * Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\n * To render the `Dialog` above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/dialog-1.png\" />\n *   <img class=\"small\" src=\"screenshots/dialog-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Dialog, Portal, Provider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const showDialog = () => setVisible(true);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Provider>\n *       <View>\n *         <Button onPress={showDialog}>Show Dialog</Button>\n *         <Portal>\n *           <Dialog visible={visible} onDismiss={hideDialog}>\n *             <Dialog.Title>Alert</Dialog.Title>\n *             <Dialog.Content>\n *               <Text variant=\"bodyMedium\">This is simple dialog</Text>\n *             </Dialog.Content>\n *             <Dialog.Actions>\n *               <Button onPress={hideDialog}>Done</Button>\n *             </Dialog.Actions>\n *           </Dialog>\n *         </Portal>\n *       </View>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Dialog = _ref => {\n  let {\n    children,\n    dismissable = true,\n    onDismiss,\n    visible = false,\n    style,\n    theme: themeOverrides\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    isV3,\n    dark,\n    mode,\n    colors,\n    roundness\n  } = theme;\n  const borderRadius = (isV3 ? 7 : 1) * roundness;\n  const backgroundColorV2 = dark && mode === 'adaptive' ? overlay(DIALOG_ELEVATION, colors === null || colors === void 0 ? void 0 : colors.surface) : colors === null || colors === void 0 ? void 0 : colors.surface;\n  const backgroundColor = isV3 ? theme.colors.elevation.level3 : backgroundColorV2;\n  return /*#__PURE__*/React.createElement(Modal, {\n    dismissable: dismissable,\n    onDismiss: onDismiss,\n    visible: visible,\n    contentContainerStyle: [{\n      borderRadius,\n      backgroundColor\n    }, styles.container, style],\n    theme: theme\n  }, React.Children.toArray(children).filter(child => child != null && typeof child !== 'boolean').map((child, i) => {\n    if (isV3) {\n      if (i === 0 && /*#__PURE__*/React.isValidElement(child)) {\n        return /*#__PURE__*/React.cloneElement(child, {\n          style: [{\n            marginTop: 24\n          }, child.props.style]\n        });\n      }\n    }\n    if (i === 0 && /*#__PURE__*/React.isValidElement(child) && child.type === DialogContent) {\n      // Dialog content is the first item, so we add a top padding\n      return /*#__PURE__*/React.cloneElement(child, {\n        style: [{\n          paddingTop: 24\n        }, child.props.style]\n      });\n    }\n    return child;\n  }));\n};\n\n// @component ./DialogContent.tsx\nDialog.Content = DialogContent;\n// @component ./DialogActions.tsx\nDialog.Actions = DialogActions;\n// @component ./DialogTitle.tsx\nDialog.Title = DialogTitle;\n// @component ./DialogScrollArea.tsx\nDialog.ScrollArea = DialogScrollArea;\n// @component ./DialogIcon.tsx\nDialog.Icon = DialogIcon;\nconst styles = StyleSheet.create({\n  container: {\n    /**\n     * This prevents the shadow from being clipped on Android since Android\n     * doesn't support `overflow: visible`.\n     * One downside for this fix is that it will disable clicks on the area\n     * of the shadow around the dialog, consequently, if you click around the\n     * dialog (44 pixel from the top and bottom) it won't be dismissed.\n     */\n    marginVertical: Platform.OS === 'android' ? 44 : 0,\n    marginHorizontal: 26,\n    elevation: DIALOG_ELEVATION,\n    justifyContent: 'flex-start'\n  }\n});\nexport default Dialog;\n//# sourceMappingURL=Dialog.js.map"]},"metadata":{},"sourceType":"module"}