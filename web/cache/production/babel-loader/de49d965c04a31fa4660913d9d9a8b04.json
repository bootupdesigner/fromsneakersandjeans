{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"style\",\"status\",\"label\",\"onPress\",\"labelStyle\",\"theme\",\"testID\",\"mode\",\"position\",\"accessibilityLabel\",\"disabled\",\"labelVariant\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from\"../../core/theming\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import Text from\"../Typography/Text\";import Checkbox from\"./Checkbox\";import CheckboxAndroid from\"./CheckboxAndroid\";import CheckboxIOS from\"./CheckboxIOS\";var CheckboxItem=function CheckboxItem(_ref){var style=_ref.style,status=_ref.status,label=_ref.label,onPress=_ref.onPress,labelStyle=_ref.labelStyle,themeOverrides=_ref.theme,testID=_ref.testID,mode=_ref.mode,_ref$position=_ref.position,position=_ref$position===void 0?'trailing':_ref$position,_ref$accessibilityLab=_ref.accessibilityLabel,accessibilityLabel=_ref$accessibilityLab===void 0?label:_ref$accessibilityLab,disabled=_ref.disabled,_ref$labelVariant=_ref.labelVariant,labelVariant=_ref$labelVariant===void 0?'bodyLarge':_ref$labelVariant,props=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var checkboxProps=_objectSpread(_objectSpread({},props),{},{status:status,theme:theme,disabled:disabled});var isLeading=position==='leading';var checkbox;if(mode==='android'){checkbox=React.createElement(CheckboxAndroid,checkboxProps);}else if(mode==='ios'){checkbox=React.createElement(CheckboxIOS,checkboxProps);}else{checkbox=React.createElement(Checkbox,checkboxProps);}var textColor=theme.isV3?theme.colors.onSurface:theme.colors.text;var disabledTextColor=theme.isV3?theme.colors.onSurfaceDisabled:theme.colors.disabled;var textAlign=isLeading?'right':'left';var computedStyle={color:disabled?disabledTextColor:textColor,textAlign:textAlign};return React.createElement(TouchableRipple,{accessibilityLabel:accessibilityLabel,accessibilityRole:\"checkbox\",accessibilityState:{checked:status==='checked',disabled:disabled},onPress:onPress,testID:testID,disabled:disabled,theme:theme},React.createElement(View,{style:[styles.container,style],pointerEvents:\"none\",importantForAccessibility:\"no-hide-descendants\"},isLeading&&checkbox,React.createElement(Text,{variant:labelVariant,style:[styles.label,!theme.isV3&&styles.font,computedStyle,labelStyle]},label),!isLeading&&checkbox));};CheckboxItem.displayName='Checkbox.Item';export default CheckboxItem;export{CheckboxItem};var styles=StyleSheet.create({container:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',paddingVertical:8,paddingHorizontal:16},label:{flexShrink:1,flexGrow:1},font:{fontSize:16}});","map":{"version":3,"sources":["CheckboxItem.tsx"],"names":["React","useInternalTheme","TouchableRipple","Text","Checkbox","CheckboxAndroid","CheckboxIOS","CheckboxItem","style","status","label","onPress","labelStyle","theme","themeOverrides","testID","mode","position","accessibilityLabel","disabled","labelVariant","props","checkboxProps","isLeading","checkbox","textColor","isV3","colors","onSurface","text","disabledTextColor","onSurfaceDisabled","textAlign","computedStyle","color","checked","styles","container","font","displayName","StyleSheet","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","flexShrink","flexGrow","fontSize"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport Checkbox from './Checkbox';\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\n/**\n * Checkbox.Item allows you to press the whole row (item) instead of only the Checkbox.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Checkbox.Item label=\"Item\" status=\"checked\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n *```\n */\n\nconst CheckboxItem = _ref => {\n  let {\n    style,\n    status,\n    label,\n    onPress,\n    labelStyle,\n    theme: themeOverrides,\n    testID,\n    mode,\n    position = 'trailing',\n    accessibilityLabel = label,\n    disabled,\n    labelVariant = 'bodyLarge',\n    ...props\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const checkboxProps = {\n    ...props,\n    status,\n    theme,\n    disabled\n  };\n  const isLeading = position === 'leading';\n  let checkbox;\n  if (mode === 'android') {\n    checkbox = /*#__PURE__*/React.createElement(CheckboxAndroid, checkboxProps);\n  } else if (mode === 'ios') {\n    checkbox = /*#__PURE__*/React.createElement(CheckboxIOS, checkboxProps);\n  } else {\n    checkbox = /*#__PURE__*/React.createElement(Checkbox, checkboxProps);\n  }\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n  const disabledTextColor = theme.isV3 ? theme.colors.onSurfaceDisabled : theme.colors.disabled;\n  const textAlign = isLeading ? 'right' : 'left';\n  const computedStyle = {\n    color: disabled ? disabledTextColor : textColor,\n    textAlign\n  };\n  return /*#__PURE__*/React.createElement(TouchableRipple, {\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"checkbox\",\n    accessibilityState: {\n      checked: status === 'checked',\n      disabled\n    },\n    onPress: onPress,\n    testID: testID,\n    disabled: disabled,\n    theme: theme\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.container, style],\n    pointerEvents: \"none\",\n    importantForAccessibility: \"no-hide-descendants\"\n  }, isLeading && checkbox, /*#__PURE__*/React.createElement(Text, {\n    variant: labelVariant,\n    style: [styles.label, !theme.isV3 && styles.font, computedStyle, labelStyle]\n  }, label), !isLeading && checkbox));\n};\nCheckboxItem.displayName = 'Checkbox.Item';\nexport default CheckboxItem;\n\n// @component-docs ignore-next-line\nexport { CheckboxItem };\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16\n  },\n  label: {\n    flexShrink: 1,\n    flexGrow: 1\n  },\n  font: {\n    fontSize: 16\n  }\n});\n//# sourceMappingURL=CheckboxItem.js.map"]},"metadata":{},"sourceType":"module"}