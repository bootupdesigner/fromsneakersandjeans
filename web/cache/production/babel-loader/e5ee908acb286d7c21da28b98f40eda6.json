{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"elevation\",\"onLongPress\",\"delayLongPress\",\"onPress\",\"mode\",\"children\",\"style\",\"contentStyle\",\"theme\",\"testID\",\"accessible\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from\"../../core/theming\";import Surface from\"../Surface\";import CardActions from\"./CardActions\";import CardContent from\"./CardContent\";import CardCover from\"./CardCover\";import CardTitle from\"./CardTitle\";import{getCardColors}from\"./utils\";var Card=function Card(_ref){var _ref$elevation=_ref.elevation,cardElevation=_ref$elevation===void 0?1:_ref$elevation,onLongPress=_ref.onLongPress,delayLongPress=_ref.delayLongPress,onPress=_ref.onPress,_ref$mode=_ref.mode,cardMode=_ref$mode===void 0?'elevated':_ref$mode,children=_ref.children,style=_ref.style,contentStyle=_ref.contentStyle,themeOverrides=_ref.theme,_ref$testID=_ref.testID,testID=_ref$testID===void 0?'card':_ref$testID,accessible=_ref.accessible,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var isMode=React.useCallback(function(modeToCompare){return cardMode===modeToCompare;},[cardMode]);var _React$useRef=React.useRef(new Animated.Value(cardElevation)),elevation=_React$useRef.current;var _React$useRef2=React.useRef(new Animated.Value(cardElevation)),elevationDarkAdaptive=_React$useRef2.current;var animation=theme.animation,dark=theme.dark,mode=theme.mode,roundness=theme.roundness,isV3=theme.isV3;var prevDarkRef=React.useRef(dark);React.useEffect(function(){prevDarkRef.current=dark;});var prevDark=prevDarkRef.current;var isAdaptiveMode=mode==='adaptive';var animationDuration=150*animation.scale;React.useEffect(function(){if(dark&&isAdaptiveMode&&!prevDark){elevation.setValue(cardElevation);elevationDarkAdaptive.setValue(cardElevation);}},[prevDark,dark,isAdaptiveMode,cardElevation,elevation,elevationDarkAdaptive]);var runElevationAnimation=function runElevationAnimation(pressType){var isPressTypeIn=pressType==='in';if(dark&&isAdaptiveMode){Animated.timing(elevationDarkAdaptive,{toValue:isPressTypeIn?isV3?2:8:cardElevation,duration:animationDuration,useNativeDriver:false}).start();}else{Animated.timing(elevation,{toValue:isPressTypeIn?isV3?2:8:cardElevation,duration:animationDuration,useNativeDriver:false}).start();}};var handlePressIn=function handlePressIn(){runElevationAnimation('in');};var handlePressOut=function handlePressOut(){runElevationAnimation('out');};var total=React.Children.count(children);var siblings=React.Children.map(children,function(child){return React.isValidElement(child)&&child.type?child.type.displayName:null;});var computedElevation=dark&&isAdaptiveMode?elevationDarkAdaptive:elevation;var _getCardColors=getCardColors({theme:theme,mode:cardMode}),backgroundColor=_getCardColors.backgroundColor,themedBorderColor=_getCardColors.borderColor;var _ref2=StyleSheet.flatten(style)||{},_ref2$borderRadius=_ref2.borderRadius,borderRadius=_ref2$borderRadius===void 0?(isV3?3:1)*roundness:_ref2$borderRadius,_ref2$borderColor=_ref2.borderColor,borderColor=_ref2$borderColor===void 0?themedBorderColor:_ref2$borderColor;return React.createElement(Surface,_extends({style:[{borderRadius:borderRadius},isV3&&!isMode('elevated')&&{backgroundColor:backgroundColor},!isV3&&isMode('outlined')?styles.resetElevation:{elevation:computedElevation},style],theme:theme},isV3&&{elevation:isMode('elevated')?computedElevation:0},{testID:testID+\"-container\"},rest),isMode('outlined')&&React.createElement(View,{pointerEvents:\"none\",testID:testID+\"-outline\",style:[{borderRadius:borderRadius,borderColor:borderColor},styles.outline]}),React.createElement(TouchableWithoutFeedback,{delayPressIn:0,disabled:!(onPress||onLongPress),delayLongPress:delayLongPress,onLongPress:onLongPress,onPress:onPress,onPressIn:onPress||onLongPress?handlePressIn:undefined,onPressOut:onPress||onLongPress?handlePressOut:undefined,testID:testID,accessible:accessible},React.createElement(View,{style:[styles.innerContainer,contentStyle]},React.Children.map(children,function(child,index){return React.isValidElement(child)?React.cloneElement(child,{index:index,total:total,siblings:siblings}):child;}))));};Card.Content=CardContent;Card.Actions=CardActions;Card.Cover=CardCover;Card.Title=CardTitle;var styles=StyleSheet.create({innerContainer:{flexShrink:1},outline:{borderWidth:1,position:'absolute',width:'100%',height:'100%',zIndex:2},resetElevation:{elevation:0}});export default Card;","map":{"version":3,"sources":["Card.tsx"],"names":["React","useInternalTheme","Surface","CardActions","CardContent","CardCover","CardTitle","getCardColors","Card","elevation","cardElevation","onLongPress","delayLongPress","onPress","mode","cardMode","children","style","contentStyle","theme","themeOverrides","testID","accessible","rest","isMode","useCallback","modeToCompare","current","useRef","Animated","Value","elevationDarkAdaptive","animation","dark","roundness","isV3","prevDarkRef","useEffect","prevDark","isAdaptiveMode","animationDuration","scale","setValue","runElevationAnimation","pressType","isPressTypeIn","timing","toValue","duration","useNativeDriver","start","handlePressIn","handlePressOut","total","Children","count","siblings","map","child","isValidElement","type","displayName","computedElevation","backgroundColor","borderColor","themedBorderColor","borderRadius","StyleSheet","flatten","styles","resetElevation","outline","undefined","innerContainer","index","cloneElement","Content","Actions","Cover","Title","create","flexShrink","borderWidth","position","width","height","zIndex"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Animated, StyleSheet, TouchableWithoutFeedback, View } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport Surface from '../Surface';\nimport CardActions from './CardActions';\nimport CardContent from './CardContent';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardCover from './CardCover';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardTitle from './CardTitle';\nimport { getCardColors } from './utils';\n/**\n * A card is a sheet of material that serves as an entry point to more detailed information.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/card-1.png\" />\n *     <figcaption>Elevated card</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/card-2.png\" />\n *     <figcaption>Outlined card</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/card-3.png\" />\n *     <figcaption>Contained card</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Button, Card, Text } from 'react-native-paper';\n *\n * const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={LeftContent} />\n *     <Card.Content>\n *       <Text variant=\"titleLarge\">Card title</Text>\n *       <Text variant=\"bodyMedium\">Card content</Text>\n *     </Card.Content>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Card = _ref => {\n  let {\n    elevation: cardElevation = 1,\n    onLongPress,\n    delayLongPress,\n    onPress,\n    mode: cardMode = 'elevated',\n    children,\n    style,\n    contentStyle,\n    theme: themeOverrides,\n    testID = 'card',\n    accessible,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const isMode = React.useCallback(modeToCompare => {\n    return cardMode === modeToCompare;\n  }, [cardMode]);\n\n  // Default animated value\n  const {\n    current: elevation\n  } = React.useRef(new Animated.Value(cardElevation));\n  // Dark adaptive animated value, used in case of toggling the theme,\n  // it prevents animating the background with native drivers inside Surface\n  const {\n    current: elevationDarkAdaptive\n  } = React.useRef(new Animated.Value(cardElevation));\n  const {\n    animation,\n    dark,\n    mode,\n    roundness,\n    isV3\n  } = theme;\n  const prevDarkRef = React.useRef(dark);\n  React.useEffect(() => {\n    prevDarkRef.current = dark;\n  });\n  const prevDark = prevDarkRef.current;\n  const isAdaptiveMode = mode === 'adaptive';\n  const animationDuration = 150 * animation.scale;\n  React.useEffect(() => {\n    /**\n     * Resets animations values if updating to dark adaptive mode,\n     * otherwise, any card that is in the middle of animation while\n     * toggling the theme will stay at that animated value until\n     * the next press-in\n     */\n    if (dark && isAdaptiveMode && !prevDark) {\n      elevation.setValue(cardElevation);\n      elevationDarkAdaptive.setValue(cardElevation);\n    }\n  }, [prevDark, dark, isAdaptiveMode, cardElevation, elevation, elevationDarkAdaptive]);\n  const runElevationAnimation = pressType => {\n    const isPressTypeIn = pressType === 'in';\n    if (dark && isAdaptiveMode) {\n      Animated.timing(elevationDarkAdaptive, {\n        toValue: isPressTypeIn ? isV3 ? 2 : 8 : cardElevation,\n        duration: animationDuration,\n        useNativeDriver: false\n      }).start();\n    } else {\n      Animated.timing(elevation, {\n        toValue: isPressTypeIn ? isV3 ? 2 : 8 : cardElevation,\n        duration: animationDuration,\n        useNativeDriver: false\n      }).start();\n    }\n  };\n  const handlePressIn = () => {\n    runElevationAnimation('in');\n  };\n  const handlePressOut = () => {\n    runElevationAnimation('out');\n  };\n  const total = React.Children.count(children);\n  const siblings = React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) && child.type ? child.type.displayName : null);\n  const computedElevation = dark && isAdaptiveMode ? elevationDarkAdaptive : elevation;\n  const {\n    backgroundColor,\n    borderColor: themedBorderColor\n  } = getCardColors({\n    theme,\n    mode: cardMode\n  });\n  const {\n    borderRadius = (isV3 ? 3 : 1) * roundness,\n    borderColor = themedBorderColor\n  } = StyleSheet.flatten(style) || {};\n  return /*#__PURE__*/React.createElement(Surface, _extends({\n    style: [{\n      borderRadius\n    }, isV3 && !isMode('elevated') && {\n      backgroundColor\n    }, !isV3 && isMode('outlined') ? styles.resetElevation : {\n      elevation: computedElevation\n    }, style],\n    theme: theme\n  }, isV3 && {\n    elevation: isMode('elevated') ? computedElevation : 0\n  }, {\n    testID: `${testID}-container`\n  }, rest), isMode('outlined') && /*#__PURE__*/React.createElement(View, {\n    pointerEvents: \"none\",\n    testID: `${testID}-outline`,\n    style: [{\n      borderRadius,\n      borderColor\n    }, styles.outline]\n  }), /*#__PURE__*/React.createElement(TouchableWithoutFeedback, {\n    delayPressIn: 0,\n    disabled: !(onPress || onLongPress),\n    delayLongPress: delayLongPress,\n    onLongPress: onLongPress,\n    onPress: onPress,\n    onPressIn: onPress || onLongPress ? handlePressIn : undefined,\n    onPressOut: onPress || onLongPress ? handlePressOut : undefined,\n    testID: testID,\n    accessible: accessible\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.innerContainer, contentStyle]\n  }, React.Children.map(children, (child, index) => /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {\n    index,\n    total,\n    siblings\n  }) : child))));\n};\n\n// @component ./CardContent.tsx\nCard.Content = CardContent;\n// @component ./CardActions.tsx\nCard.Actions = CardActions;\n// @component ./CardCover.tsx\nCard.Cover = CardCover;\n// @component ./CardTitle.tsx\nCard.Title = CardTitle;\nconst styles = StyleSheet.create({\n  innerContainer: {\n    flexShrink: 1\n  },\n  outline: {\n    borderWidth: 1,\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    zIndex: 2\n  },\n  resetElevation: {\n    elevation: 0\n  }\n});\nexport default Card;\n//# sourceMappingURL=Card.js.map"]},"metadata":{},"sourceType":"module"}