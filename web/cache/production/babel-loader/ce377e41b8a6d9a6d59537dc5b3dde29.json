{"ast":null,"code":"import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from\"../../core/theming\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import Text from\"../Typography/Text\";import RadioButton from\"./RadioButton\";import RadioButtonAndroid from\"./RadioButtonAndroid\";import{RadioButtonContext}from\"./RadioButtonGroup\";import RadioButtonIOS from\"./RadioButtonIOS\";import{handlePress,isChecked}from\"./utils\";var RadioButtonItem=function RadioButtonItem(_ref){var value=_ref.value,label=_ref.label,style=_ref.style,labelStyle=_ref.labelStyle,_onPress=_ref.onPress,disabled=_ref.disabled,color=_ref.color,uncheckedColor=_ref.uncheckedColor,status=_ref.status,themeOverrides=_ref.theme,_ref$accessibilityLab=_ref.accessibilityLabel,accessibilityLabel=_ref$accessibilityLab===void 0?label:_ref$accessibilityLab,testID=_ref.testID,mode=_ref.mode,_ref$position=_ref.position,position=_ref$position===void 0?'trailing':_ref$position,_ref$labelVariant=_ref.labelVariant,labelVariant=_ref$labelVariant===void 0?'bodyLarge':_ref$labelVariant;var theme=useInternalTheme(themeOverrides);var radioButtonProps={value:value,disabled:disabled,status:status,color:color,uncheckedColor:uncheckedColor};var isLeading=position==='leading';var radioButton;if(mode==='android'){radioButton=React.createElement(RadioButtonAndroid,radioButtonProps);}else if(mode==='ios'){radioButton=React.createElement(RadioButtonIOS,radioButtonProps);}else{radioButton=React.createElement(RadioButton,radioButtonProps);}var textColor=theme.isV3?theme.colors.onSurface:theme.colors.text;var disabledTextColor=theme.isV3?theme.colors.onSurfaceDisabled:theme.colors.disabled;var textAlign=isLeading?'right':'left';var computedStyle={color:disabled?disabledTextColor:textColor,textAlign:textAlign};return React.createElement(RadioButtonContext.Consumer,null,function(context){var checked=isChecked({contextValue:context===null||context===void 0?void 0:context.value,status:status,value:value})==='checked';return React.createElement(TouchableRipple,{onPress:function onPress(event){return handlePress({onPress:_onPress,onValueChange:context===null||context===void 0?void 0:context.onValueChange,value:value,event:event});},accessibilityLabel:accessibilityLabel,accessibilityRole:\"radio\",accessibilityState:{checked:checked,disabled:disabled},testID:testID,disabled:disabled,theme:theme},React.createElement(View,{style:[styles.container,style],pointerEvents:\"none\"},isLeading&&radioButton,React.createElement(Text,{variant:labelVariant,style:[styles.label,!theme.isV3&&styles.font,computedStyle,labelStyle]},label),!isLeading&&radioButton));});};RadioButtonItem.displayName='RadioButton.Item';export default RadioButtonItem;export{RadioButtonItem};var styles=StyleSheet.create({container:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',paddingVertical:8,paddingHorizontal:16},label:{flexShrink:1,flexGrow:1},font:{fontSize:16}});","map":{"version":3,"sources":["RadioButtonItem.tsx"],"names":["React","useInternalTheme","TouchableRipple","Text","RadioButton","RadioButtonAndroid","RadioButtonContext","RadioButtonIOS","handlePress","isChecked","RadioButtonItem","value","label","style","labelStyle","onPress","disabled","color","uncheckedColor","status","theme","themeOverrides","accessibilityLabel","testID","mode","position","labelVariant","radioButtonProps","isLeading","radioButton","textColor","isV3","colors","onSurface","text","disabledTextColor","onSurfaceDisabled","textAlign","computedStyle","context","checked","contextValue","event","onValueChange","styles","container","font","displayName","StyleSheet","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","flexShrink","flexGrow","fontSize"],"mappings":"AAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAAA,sHAU9B,OAASC,gBAAgB,0BAEzB,MAAOC,gBAAe,0CACtB,MAAOC,KAAI,0BACX,MAAOC,YAAW,qBAClB,MAAOC,mBAAkB,4BACzB,OAASC,kBAAkB,0BAC3B,MAAOC,eAAc,wBACrB,OAASC,WAAW,CAAEC,SAAS,eA4G/B,GAAMC,gBAAe,CAAG,QAAlBA,gBAAe,CAAG,IAAA,CAgBX,CAhBY,GACvBC,MAAK,CAeC,IAAA,CAfNA,KAAK,CACLC,KAAK,CAcC,IAAA,CAdNA,KAAK,CACLC,KAAK,CAaC,IAAA,CAbNA,KAAK,CACLC,UAAU,CAYJ,IAAA,CAZNA,UAAU,CACVC,QAAO,CAWD,IAAA,CAXNA,OAAO,CACPC,QAAQ,CAUF,IAAA,CAVNA,QAAQ,CACRC,KAAK,CASC,IAAA,CATNA,KAAK,CACLC,cAAc,CAQR,IAAA,CARNA,cAAc,CACdC,MAAM,CAOA,IAAA,CAPNA,MAAM,CACCE,cAAc,CAMf,IAAA,CANND,KAAK,uBAMC,IAAA,CALNE,kBAAkB,CAAlBA,kBAAkB,gCAAGV,KAAK,uBAC1BW,MAAM,CAIA,IAAA,CAJNA,MAAM,CACNC,IAAI,CAGE,IAAA,CAHNA,IAAI,eAGE,IAAA,CAFNC,QAAQ,CAARA,QAAQ,wBAAG,UAAU,iCAEf,IAAA,CADNC,YAAY,CAAZA,YAAY,4BAAG,WAAA,mBAEf,GAAMN,MAAK,CAAGnB,gBAAgB,CAACoB,cAAc,CAAC,CAC9C,GAAMM,iBAAgB,CAAG,CAAEhB,KAAK,CAALA,KAAK,CAAEK,QAAQ,CAARA,QAAQ,CAAEG,MAAM,CAANA,MAAM,CAAEF,KAAK,CAALA,KAAK,CAAEC,cAAAA,CAAAA,cAAe,CAAC,CAC3E,GAAMU,UAAS,CAAGH,QAAQ,GAAK,SAAS,CACxC,GAAII,YAAgB,CAEpB,GAAIL,IAAI,GAAK,SAAS,CAAE,CACtBK,WAAW,CAAG,KAAA,CAAA,aAAA,CAAC,kBAAkB,CAAKF,gBAAgB,CAAI,CAC5D,CAAC,IAAM,IAAIH,IAAI,GAAK,KAAK,CAAE,CACzBK,WAAW,CAAG,KAAA,CAAA,aAAA,CAAC,cAAc,CAAKF,gBAAgB,CAAI,CACxD,CAAC,IAAM,CACLE,WAAW,CAAG,KAAA,CAAA,aAAA,CAAC,WAAW,CAAKF,gBAAgB,CAAI,CACrD,CAEA,GAAMG,UAAS,CAAGV,KAAK,CAACW,IAAI,CAAGX,KAAK,CAACY,MAAM,CAACC,SAAS,CAAGb,KAAK,CAACY,MAAM,CAACE,IAAI,CACzE,GAAMC,kBAAiB,CAAGf,KAAK,CAACW,IAAI,CAChCX,KAAK,CAACY,MAAM,CAACI,iBAAiB,CAC9BhB,KAAK,CAACY,MAAM,CAAChB,QAAQ,CACzB,GAAMqB,UAAS,CAAGT,SAAS,CAAG,OAAO,CAAG,MAAM,CAE9C,GAAMU,cAAa,CAAG,CACpBrB,KAAK,CAAED,QAAQ,CAAGmB,iBAAiB,CAAGL,SAAS,CAC/CO,SAAAA,CAAAA,SACF,CAAc,CAEd,MACE,MAAA,CAAA,aAAA,CAAC,kBAAkB,CAAC,QAAQ,CAAA,IAAA,CACxBE,SAAAA,OAAgC,CAAK,CACrC,GAAMC,QAAO,CACX/B,SAAS,CAAC,CACRgC,YAAY,CAAEF,OAAO,GAAA,IAAA,EAAPA,OAAO,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAPA,OAAO,CAAE5B,KAAK,CAC5BQ,MAAM,CAANA,MAAM,CACNR,KAAAA,CAAAA,KACF,CAAC,CAAC,GAAK,SAAS,CAClB,MACE,MAAA,CAAA,aAAA,CAAC,eAAe,CAAA,CACd,OAAO,CAAG+B,iBAAAA,KAAK,QACblC,YAAW,CAAC,CACVO,OAAO,CAAEA,QAAO,CAChB4B,aAAa,CAAEJ,OAAO,GAAA,IAAA,EAAPA,OAAO,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAPA,OAAO,CAAEI,aAAa,CACrChC,KAAK,CAALA,KAAK,CACL+B,KAAAA,CAAAA,KACF,CAAC,CACF,GACD,kBAAkB,CAAEpB,kBAAmB,CACvC,iBAAiB,CAAC,OAAO,CACzB,kBAAkB,CAAE,CAClBkB,OAAO,CAAPA,OAAO,CACPxB,QAAAA,CAAAA,QACF,CAAE,CACF,MAAM,CAAEO,MAAO,CACf,QAAQ,CAAEP,QAAS,CACnB,KAAK,CAAEI,KAAM,CAAA,CAEb,KAAA,CAAA,aAAA,CAAC,IAAI,CAAA,CAAC,KAAK,CAAE,CAACwB,MAAM,CAACC,SAAS,CAAEhC,KAAK,CAAE,CAAC,aAAa,CAAC,MAAM,CAAA,CACzDe,SAAS,EAAIC,WAAW,CACzB,KAAA,CAAA,aAAA,CAAC,IAAI,CAAA,CACH,OAAO,CAAEH,YAAa,CACtB,KAAK,CAAE,CACLkB,MAAM,CAAChC,KAAK,CACZ,CAACQ,KAAK,CAACW,IAAI,EAAIa,MAAM,CAACE,IAAI,CAC1BR,aAAa,CACbxB,UAAU,CACV,CAAA,CAEDF,KAAK,CACD,CACN,CAACgB,SAAS,EAAIC,WAAW,CACrB,CACS,CAEtB,CAAC,CAC2B,CAElC,CAAC,CAEDnB,eAAe,CAACqC,WAAW,CAAG,kBAAkB,CAEhD,cAAerC,gBAAe,CAG9B,OAASA,eAAe,EAExB,GAAMkC,OAAM,CAAGI,UAAU,CAACC,MAAM,CAAC,CAC/BJ,SAAS,CAAE,CACTK,aAAa,CAAE,KAAK,CACpBC,UAAU,CAAE,QAAQ,CACpBC,cAAc,CAAE,eAAe,CAC/BC,eAAe,CAAE,CAAC,CAClBC,iBAAiB,CAAE,EACrB,CAAC,CACD1C,KAAK,CAAE,CACL2C,UAAU,CAAE,CAAC,CACbC,QAAQ,CAAE,CACZ,CAAC,CACDV,IAAI,CAAE,CACJW,QAAQ,CAAE,EACZ,CACF,CAAC,CAAC","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport RadioButton from './RadioButton';\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport { RadioButtonContext } from './RadioButtonGroup';\nimport RadioButtonIOS from './RadioButtonIOS';\nimport { handlePress, isChecked } from './utils';\n/**\n * RadioButton.Item allows you to press the whole row (item) instead of only the RadioButton.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/radio-item.ios.png\" />\n *     <figcaption>Pressed</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { RadioButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('first');\n *\n *   return (\n *     <RadioButton.Group onValueChange={value => setValue(value)} value={value}>\n *       <RadioButton.Item label=\"First item\" value=\"first\" />\n *       <RadioButton.Item label=\"Second item\" value=\"second\" />\n *     </RadioButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nconst RadioButtonItem = _ref => {\n  let {\n    value,\n    label,\n    style,\n    labelStyle,\n    onPress,\n    disabled,\n    color,\n    uncheckedColor,\n    status,\n    theme: themeOverrides,\n    accessibilityLabel = label,\n    testID,\n    mode,\n    position = 'trailing',\n    labelVariant = 'bodyLarge'\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const radioButtonProps = {\n    value,\n    disabled,\n    status,\n    color,\n    uncheckedColor\n  };\n  const isLeading = position === 'leading';\n  let radioButton;\n  if (mode === 'android') {\n    radioButton = /*#__PURE__*/React.createElement(RadioButtonAndroid, radioButtonProps);\n  } else if (mode === 'ios') {\n    radioButton = /*#__PURE__*/React.createElement(RadioButtonIOS, radioButtonProps);\n  } else {\n    radioButton = /*#__PURE__*/React.createElement(RadioButton, radioButtonProps);\n  }\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n  const disabledTextColor = theme.isV3 ? theme.colors.onSurfaceDisabled : theme.colors.disabled;\n  const textAlign = isLeading ? 'right' : 'left';\n  const computedStyle = {\n    color: disabled ? disabledTextColor : textColor,\n    textAlign\n  };\n  return /*#__PURE__*/React.createElement(RadioButtonContext.Consumer, null, context => {\n    const checked = isChecked({\n      contextValue: context === null || context === void 0 ? void 0 : context.value,\n      status,\n      value\n    }) === 'checked';\n    return /*#__PURE__*/React.createElement(TouchableRipple, {\n      onPress: event => handlePress({\n        onPress: onPress,\n        onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange,\n        value,\n        event\n      }),\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: \"radio\",\n      accessibilityState: {\n        checked,\n        disabled\n      },\n      testID: testID,\n      disabled: disabled,\n      theme: theme\n    }, /*#__PURE__*/React.createElement(View, {\n      style: [styles.container, style],\n      pointerEvents: \"none\"\n    }, isLeading && radioButton, /*#__PURE__*/React.createElement(Text, {\n      variant: labelVariant,\n      style: [styles.label, !theme.isV3 && styles.font, computedStyle, labelStyle]\n    }, label), !isLeading && radioButton));\n  });\n};\nRadioButtonItem.displayName = 'RadioButton.Item';\nexport default RadioButtonItem;\n\n// @component-docs ignore-next-line\nexport { RadioButtonItem };\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16\n  },\n  label: {\n    flexShrink: 1,\n    flexGrow: 1\n  },\n  font: {\n    fontSize: 16\n  }\n});\n//# sourceMappingURL=RadioButtonItem.js.map"]},"metadata":{},"sourceType":"module"}