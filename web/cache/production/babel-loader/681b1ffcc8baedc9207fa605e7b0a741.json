{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{UnavailabilityError}from'expo-modules-core';import NativeEventEmitter from\"react-native-web/dist/exports/NativeEventEmitter\";import ExponentSpeech from\"./ExponentSpeech\";import{VoiceQuality}from\"./Speech.types\";var SpeechEventEmitter=ExponentSpeech&&new NativeEventEmitter(ExponentSpeech);export{VoiceQuality};var _CALLBACKS={};var _nextCallbackId=1;var _didSetListeners=false;function _unregisterListenersIfNeeded(){if(Object.keys(_CALLBACKS).length===0){removeSpeakingListener('Exponent.speakingStarted');removeSpeakingListener('Exponent.speakingDone');removeSpeakingListener('Exponent.speakingStopped');removeSpeakingListener('Exponent.speakingError');_didSetListeners=false;}}function _registerListenersIfNeeded(){if(_didSetListeners)return;_didSetListeners=true;setSpeakingListener('Exponent.speakingStarted',function(_ref){var id=_ref.id;var options=_CALLBACKS[id];if(options&&options.onStart){options.onStart();}});setSpeakingListener('Exponent.speakingDone',function(_ref2){var id=_ref2.id;var options=_CALLBACKS[id];if(options&&options.onDone){options.onDone();}delete _CALLBACKS[id];_unregisterListenersIfNeeded();});setSpeakingListener('Exponent.speakingStopped',function(_ref3){var id=_ref3.id;var options=_CALLBACKS[id];if(options&&options.onStopped){options.onStopped();}delete _CALLBACKS[id];_unregisterListenersIfNeeded();});setSpeakingListener('Exponent.speakingError',function(_ref4){var id=_ref4.id,error=_ref4.error;var options=_CALLBACKS[id];if(options&&options.onError){options.onError(new Error(error));}delete _CALLBACKS[id];_unregisterListenersIfNeeded();});}export function speak(text){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var id=_nextCallbackId++;_CALLBACKS[id]=options;_registerListenersIfNeeded();ExponentSpeech.speak(String(id),text,options);}export function getAvailableVoicesAsync(){return _getAvailableVoicesAsync.apply(this,arguments);}function _getAvailableVoicesAsync(){_getAvailableVoicesAsync=_asyncToGenerator(function*(){if(!ExponentSpeech.getVoices){throw new UnavailabilityError('Speech','getVoices');}return ExponentSpeech.getVoices();});return _getAvailableVoicesAsync.apply(this,arguments);}export function isSpeakingAsync(){return _isSpeakingAsync.apply(this,arguments);}function _isSpeakingAsync(){_isSpeakingAsync=_asyncToGenerator(function*(){return ExponentSpeech.isSpeaking();});return _isSpeakingAsync.apply(this,arguments);}export function stop(){return _stop.apply(this,arguments);}function _stop(){_stop=_asyncToGenerator(function*(){return ExponentSpeech.stop();});return _stop.apply(this,arguments);}export function pause(){return _pause.apply(this,arguments);}function _pause(){_pause=_asyncToGenerator(function*(){if(!ExponentSpeech.pause){throw new UnavailabilityError('Speech','pause');}return ExponentSpeech.pause();});return _pause.apply(this,arguments);}export function resume(){return _resume.apply(this,arguments);}function _resume(){_resume=_asyncToGenerator(function*(){if(!ExponentSpeech.resume){throw new UnavailabilityError('Speech','resume');}return ExponentSpeech.resume();});return _resume.apply(this,arguments);}function setSpeakingListener(eventName,callback){var listenerCount=SpeechEventEmitter.listenerCount?SpeechEventEmitter.listenerCount(eventName):SpeechEventEmitter.listeners(eventName).length;if(listenerCount>0){SpeechEventEmitter.removeAllListeners(eventName);}SpeechEventEmitter.addListener(eventName,callback);}function removeSpeakingListener(eventName){SpeechEventEmitter.removeAllListeners(eventName);}export var maxSpeechInputLength=ExponentSpeech.maxSpeechInputLength||Number.MAX_VALUE;","map":{"version":3,"sources":["../src/Speech/Speech.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\nimport { NativeEventEmitter } from 'react-native';\n\nimport ExponentSpeech from './ExponentSpeech';\nimport { SpeechOptions, SpeechEventCallback, VoiceQuality, Voice, WebVoice } from './Speech.types';\n\nconst SpeechEventEmitter = ExponentSpeech && new NativeEventEmitter(ExponentSpeech);\n\nexport { SpeechOptions, SpeechEventCallback, VoiceQuality, Voice, WebVoice };\n\nconst _CALLBACKS = {};\nlet _nextCallbackId = 1;\nlet _didSetListeners = false;\n\nfunction _unregisterListenersIfNeeded() {\n  if (Object.keys(_CALLBACKS).length === 0) {\n    removeSpeakingListener('Exponent.speakingStarted');\n    removeSpeakingListener('Exponent.speakingDone');\n    removeSpeakingListener('Exponent.speakingStopped');\n    removeSpeakingListener('Exponent.speakingError');\n    _didSetListeners = false;\n  }\n}\n\nfunction _registerListenersIfNeeded() {\n  if (_didSetListeners) return;\n  _didSetListeners = true;\n  setSpeakingListener('Exponent.speakingStarted', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onStart) {\n      options.onStart();\n    }\n  });\n  setSpeakingListener('Exponent.speakingDone', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onDone) {\n      options.onDone();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingStopped', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onStopped) {\n      options.onStopped();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingError', ({ id, error }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onError) {\n      options.onError(new Error(error));\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n}\n\n// @needsAudit\n/**\n * Speak out loud the text given options. Calling this when another text is being spoken adds\n * an utterance to queue.\n * @param text The text to be spoken. Cannot be longer than [`Speech.maxSpeechInputLength`](#speechmaxspeechinputlength).\n * @param options A `SpeechOptions` object.\n */\nexport function speak(text: string, options: SpeechOptions = {}) {\n  const id = _nextCallbackId++;\n  _CALLBACKS[id] = options;\n  _registerListenersIfNeeded();\n  ExponentSpeech.speak(String(id), text, options);\n}\n\n// @needsAudit\n/**\n * Returns list of all available voices.\n * @return List of `Voice` objects.\n */\nexport async function getAvailableVoicesAsync(): Promise<Voice[]> {\n  if (!ExponentSpeech.getVoices) {\n    throw new UnavailabilityError('Speech', 'getVoices');\n  }\n  return ExponentSpeech.getVoices();\n}\n\n//@needsAudit\n/**\n * Determine whether the Text-to-speech utility is currently speaking. Will return `true` if speaker\n * is paused.\n * @return Returns a Promise that fulfils with a boolean, `true` if speaking, `false` if not.\n */\nexport async function isSpeakingAsync(): Promise<boolean> {\n  return ExponentSpeech.isSpeaking();\n}\n\n// @needsAudit\n/**\n * Interrupts current speech and deletes all in queue.\n */\nexport async function stop(): Promise<void> {\n  return ExponentSpeech.stop();\n}\n\n// @needsAudit\n/**\n * Pauses current speech. This method is not available on Android.\n */\nexport async function pause(): Promise<void> {\n  if (!ExponentSpeech.pause) {\n    throw new UnavailabilityError('Speech', 'pause');\n  }\n  return ExponentSpeech.pause();\n}\n\n// @needsAudit\n/**\n * Resumes speaking previously paused speech or does nothing if there's none. This method is not\n * available on Android.\n */\nexport async function resume(): Promise<void> {\n  if (!ExponentSpeech.resume) {\n    throw new UnavailabilityError('Speech', 'resume');\n  }\n\n  return ExponentSpeech.resume();\n}\n\nfunction setSpeakingListener(eventName, callback) {\n  // @ts-ignore: the EventEmitter interface has been changed in react-native@0.64.0\n  const listenerCount = SpeechEventEmitter.listenerCount\n    ? // @ts-ignore: this is available since 0.64\n      SpeechEventEmitter.listenerCount(eventName)\n    : // @ts-ignore: this is available in older versions\n      SpeechEventEmitter.listeners(eventName).length;\n  if (listenerCount > 0) {\n    SpeechEventEmitter.removeAllListeners(eventName);\n  }\n  SpeechEventEmitter.addListener(eventName, callback);\n}\n\nfunction removeSpeakingListener(eventName) {\n  SpeechEventEmitter.removeAllListeners(eventName);\n}\n\n// @needsAudit\n/**\n * Maximum possible text length acceptable by `Speech.speak()` method. It is platform-dependent.\n * On iOS, this returns `Number.MAX_VALUE`.\n */\nexport const maxSpeechInputLength: number = ExponentSpeech.maxSpeechInputLength || Number.MAX_VALUE;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}