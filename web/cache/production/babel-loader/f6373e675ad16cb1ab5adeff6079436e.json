{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"id\",\"initialRouteName\",\"children\",\"screenListeners\",\"screenOptions\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{createNavigatorFactory,StackActions,StackRouter,useNavigationBuilder}from'@react-navigation/native';import*as React from'react';import NativeStackView from\"../views/NativeStackView\";function NativeStackNavigator(_ref){var id=_ref.id,initialRouteName=_ref.initialRouteName,children=_ref.children,screenListeners=_ref.screenListeners,screenOptions=_ref.screenOptions,rest=_objectWithoutProperties(_ref,_excluded);var _useNavigationBuilder=useNavigationBuilder(StackRouter,{id:id,initialRouteName:initialRouteName,children:children,screenListeners:screenListeners,screenOptions:screenOptions}),state=_useNavigationBuilder.state,descriptors=_useNavigationBuilder.descriptors,navigation=_useNavigationBuilder.navigation,NavigationContent=_useNavigationBuilder.NavigationContent;React.useEffect(function(){var _navigation$addListen;return navigation===null||navigation===void 0?void 0:(_navigation$addListen=navigation.addListener)===null||_navigation$addListen===void 0?void 0:_navigation$addListen.call(navigation,'tabPress',function(e){var isFocused=navigation.isFocused();requestAnimationFrame(function(){if(state.index>0&&isFocused&&!e.defaultPrevented){navigation.dispatch(_objectSpread(_objectSpread({},StackActions.popToTop()),{},{target:state.key}));}});});},[navigation,state.index,state.key]);return React.createElement(NavigationContent,null,React.createElement(NativeStackView,_extends({},rest,{state:state,navigation:navigation,descriptors:descriptors})));}export default createNavigatorFactory(NativeStackNavigator);","map":{"version":3,"sources":["createNativeStackNavigator.tsx"],"names":["createNavigatorFactory","StackActions","StackRouter","useNavigationBuilder","React","NativeStackView","NativeStackNavigator","id","initialRouteName","children","screenListeners","screenOptions","rest","state","descriptors","navigation","NavigationContent","useEffect","addListener","e","isFocused","requestAnimationFrame","index","defaultPrevented","dispatch","popToTop","target","key"],"mappings":"6xCAAA,OACEA,sBAAsB,CAItBC,YAAY,CAEZC,WAAW,CAEXC,oBAAoB,KACf,0BAA0B,CACjC,MAAO,GAAKC,MAAK,KAAM,OAAO,CAO9B,MAAOC,gBAAe,gCAEtB,QAASC,qBAAoB,CAAA,IAAA,CAOC,CAPA,GAC5BC,GAAE,CAMwB,IAAA,CAN1BA,EAAE,CACFC,gBAAgB,CAKU,IAAA,CAL1BA,gBAAgB,CAChBC,QAAQ,CAIkB,IAAA,CAJ1BA,QAAQ,CACRC,eAAe,CAGW,IAAA,CAH1BA,eAAe,CACfC,aAAa,CAEa,IAAA,CAF1BA,aAAa,CACVC,IAAAA,0BACuB,IAAA,YAC1B,0BACET,oBAAoB,CAMlBD,WAAW,CAAE,CACbK,EAAE,CAAFA,EAAE,CACFC,gBAAgB,CAAhBA,gBAAgB,CAChBC,QAAQ,CAARA,QAAQ,CACRC,eAAe,CAAfA,eAAe,CACfC,aAAAA,CAAAA,aACF,CAAC,CAAC,CAbIE,KAAK,uBAALA,KAAK,CAAEC,WAAW,uBAAXA,WAAW,CAAEC,UAAU,uBAAVA,UAAU,CAAEC,iBAAAA,uBAAAA,iBAAAA,CAexCZ,KAAK,CAACa,SAAS,CACb,UAAA,CAAA,GAAA,sBAAA,CAAA,MAEEF,WAAU,GAAA,IAAA,EAAVA,UAAU,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAA,CAAA,qBAAA,CAAVA,UAAU,CAAEG,WAAW,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CAAvBH,qBAAAA,CAAAA,IAAAA,CAAAA,UAAU,CAAgB,UAAU,CAAGI,SAAAA,CAAM,CAAK,CAChD,GAAMC,UAAS,CAAGL,UAAU,CAACK,SAAS,EAAE,CAIxCC,qBAAqB,CAAC,UAAM,CAC1B,GACER,KAAK,CAACS,KAAK,CAAG,CAAC,EACfF,SAAS,EACT,CAAED,CAAC,CAAgCI,gBAAgB,CACnD,CAGAR,UAAU,CAACS,QAAQ,gCACdvB,YAAY,CAACwB,QAAQ,EAAE,MAC1BC,MAAM,CAAEb,KAAK,CAACc,GAAAA,GACd,CACJ,CACF,CAAC,CAAC,CACJ,CAAC,CAAA,CAAC,CAAA,CACJ,CAACZ,UAAU,CAAEF,KAAK,CAACS,KAAK,CAAET,KAAK,CAACc,GAAG,CAAC,CACrC,CAED,MACE,MAAA,CAAA,aAAA,CAAC,iBAAiB,CAAA,IAAA,CAChB,KAAA,CAAA,aAAA,CAAC,eAAe,CAAA,QAAA,CAAA,CAAA,CAAA,CACVf,IAAI,CAAA,CACR,KAAK,CAAEC,KAAM,CACb,UAAU,CAAEE,UAAW,CACvB,WAAW,CAAED,WAAY,CAAA,CAAA,CACzB,CACgB,CAExB,CAEA,cAAed,uBAAsB,CAKnCM,oBAAoB,CAAC","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport { createNavigatorFactory, StackActions, StackRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport NativeStackView from '../views/NativeStackView';\nfunction NativeStackNavigator(_ref) {\n  let {\n    id,\n    initialRouteName,\n    children,\n    screenListeners,\n    screenOptions,\n    ...rest\n  } = _ref;\n  const {\n    state,\n    descriptors,\n    navigation,\n    NavigationContent\n  } = useNavigationBuilder(StackRouter, {\n    id,\n    initialRouteName,\n    children,\n    screenListeners,\n    screenOptions\n  });\n  React.useEffect(() => {\n    var _navigation$addListen;\n    return (// @ts-expect-error: there may not be a tab navigator in parent\n      navigation === null || navigation === void 0 ? void 0 : (_navigation$addListen = navigation.addListener) === null || _navigation$addListen === void 0 ? void 0 : _navigation$addListen.call(navigation, 'tabPress', e => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (state.index > 0 && isFocused && !e.defaultPrevented) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key\n            });\n          }\n        });\n      })\n    );\n  }, [navigation, state.index, state.key]);\n  return /*#__PURE__*/React.createElement(NavigationContent, null, /*#__PURE__*/React.createElement(NativeStackView, _extends({}, rest, {\n    state: state,\n    navigation: navigation,\n    descriptors: descriptors\n  })));\n}\nexport default createNavigatorFactory(NativeStackNavigator);\n//# sourceMappingURL=createNativeStackNavigator.js.map"]},"metadata":{},"sourceType":"module"}