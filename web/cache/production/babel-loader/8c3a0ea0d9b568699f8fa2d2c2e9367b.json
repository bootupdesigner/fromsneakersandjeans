{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"status\",\"disabled\",\"onPress\",\"theme\",\"testID\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from\"../../core/theming\";import MaterialCommunityIcon from\"../MaterialCommunityIcon\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import{getSelectionControlIOSColor}from\"./utils\";var CheckboxIOS=function CheckboxIOS(_ref){var status=_ref.status,disabled=_ref.disabled,onPress=_ref.onPress,themeOverrides=_ref.theme,testID=_ref.testID,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var checked=status==='checked';var indeterminate=status==='indeterminate';var _getSelectionControlI=getSelectionControlIOSColor({theme:theme,disabled:disabled,customColor:rest.color}),checkedColor=_getSelectionControlI.checkedColor,rippleColor=_getSelectionControlI.rippleColor;var icon=indeterminate?'minus':'check';var opacity=indeterminate||checked?1:0;return React.createElement(TouchableRipple,_extends({},rest,{borderless:true,rippleColor:rippleColor,onPress:onPress,disabled:disabled,accessibilityRole:\"checkbox\",accessibilityState:{disabled:disabled,checked:checked},accessibilityLiveRegion:\"polite\",style:styles.container,testID:testID,theme:theme}),React.createElement(View,{style:{opacity:opacity}},React.createElement(MaterialCommunityIcon,{allowFontScaling:false,name:icon,size:24,color:checkedColor,direction:\"ltr\"})));};CheckboxIOS.displayName='Checkbox.IOS';var styles=StyleSheet.create({container:{borderRadius:18,padding:6}});export default CheckboxIOS;export{CheckboxIOS};","map":{"version":3,"sources":["CheckboxIOS.tsx"],"names":["React","useInternalTheme","MaterialCommunityIcon","TouchableRipple","getSelectionControlIOSColor","CheckboxIOS","status","disabled","onPress","theme","themeOverrides","testID","rest","checked","indeterminate","checkedColor","rippleColor","customColor","color","icon","opacity","styles","container","displayName","StyleSheet","create","borderRadius","padding"],"mappings":"+bAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAAA,sHAG9B,OAASC,gBAAgB,0BAEzB,MAAOC,sBAAqB,gCAC5B,MAAOC,gBAAe,0CACtB,OAASC,2BAA2B,eA6CpC,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAG,IAAA,CAOP,CAPQ,GACnBC,OAAM,CAMA,IAAA,CANNA,MAAM,CACNC,QAAQ,CAKF,IAAA,CALNA,QAAQ,CACRC,OAAO,CAID,IAAA,CAJNA,OAAO,CACAE,cAAc,CAGf,IAAA,CAHND,KAAK,CACLE,MAAM,CAEA,IAAA,CAFNA,MAAM,CACHC,IAAAA,0BACG,IAAA,YACN,GAAMH,MAAK,CAAGR,gBAAgB,CAACS,cAAc,CAAC,CAC9C,GAAMG,QAAO,CAAGP,MAAM,GAAK,SAAS,CACpC,GAAMQ,cAAa,CAAGR,MAAM,GAAK,eAAe,CAEhD,0BAAsCF,2BAA2B,CAAC,CAChEK,KAAK,CAALA,KAAK,CACLF,QAAQ,CAARA,QAAQ,CACRU,WAAW,CAAEL,IAAI,CAACM,KACpB,CAAC,CAAC,CAJMH,YAAY,uBAAZA,YAAY,CAAEC,WAAAA,uBAAAA,WAAAA,CAMtB,GAAMG,KAAI,CAAGL,aAAa,CAAG,OAAO,CAAG,OAAO,CAC9C,GAAMM,QAAO,CAAGN,aAAa,EAAID,OAAO,CAAG,CAAC,CAAG,CAAC,CAEhD,MACE,MAAA,CAAA,aAAA,CAAC,eAAe,CAAA,QAAA,CAAA,CAAA,CAAA,CACVD,IAAI,CAAA,CACR,UAAU,CAAA,IAAA,CACV,WAAW,CAAEI,WAAY,CACzB,OAAO,CAAER,OAAQ,CACjB,QAAQ,CAAED,QAAS,CACnB,iBAAiB,CAAC,UAAU,CAC5B,kBAAkB,CAAE,CAAEA,QAAQ,CAARA,QAAQ,CAAEM,OAAAA,CAAAA,OAAQ,CAAE,CAC1C,uBAAuB,CAAC,QAAQ,CAChC,KAAK,CAAEQ,MAAM,CAACC,SAAU,CACxB,MAAM,CAAEX,MAAO,CACf,KAAK,CAAEF,KAAM,CAAA,CAAA,CAEb,KAAA,CAAA,aAAA,CAAC,IAAI,CAAA,CAAC,KAAK,CAAE,CAAEW,OAAAA,CAAAA,OAAQ,CAAE,CAAA,CACvB,KAAA,CAAA,aAAA,CAAC,qBAAqB,CAAA,CACpB,gBAAgB,CAAE,KAAM,CACxB,IAAI,CAAED,IAAK,CACX,IAAI,CAAE,EAAG,CACT,KAAK,CAAEJ,YAAa,CACpB,SAAS,CAAC,KAAK,CAAA,CACf,CACG,CACS,CAEtB,CAAC,CAEDV,WAAW,CAACkB,WAAW,CAAG,cAAc,CAExC,GAAMF,OAAM,CAAGG,UAAU,CAACC,MAAM,CAAC,CAC/BH,SAAS,CAAE,CACTI,YAAY,CAAE,EAAE,CAChBC,OAAO,CAAE,CACX,CACF,CAAC,CAAC,CAEF,cAAetB,YAAW,CAG1B,OAASA,WAAW","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { getSelectionControlIOSColor } from './utils';\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for iOS, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nconst CheckboxIOS = _ref => {\n  let {\n    status,\n    disabled,\n    onPress,\n    theme: themeOverrides,\n    testID,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const checked = status === 'checked';\n  const indeterminate = status === 'indeterminate';\n  const {\n    checkedColor,\n    rippleColor\n  } = getSelectionControlIOSColor({\n    theme,\n    disabled,\n    customColor: rest.color\n  });\n  const icon = indeterminate ? 'minus' : 'check';\n  const opacity = indeterminate || checked ? 1 : 0;\n  return /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n    borderless: true,\n    rippleColor: rippleColor,\n    onPress: onPress,\n    disabled: disabled,\n    accessibilityRole: \"checkbox\",\n    accessibilityState: {\n      disabled,\n      checked\n    },\n    accessibilityLiveRegion: \"polite\",\n    style: styles.container,\n    testID: testID,\n    theme: theme\n  }), /*#__PURE__*/React.createElement(View, {\n    style: {\n      opacity\n    }\n  }, /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n    allowFontScaling: false,\n    name: icon,\n    size: 24,\n    color: checkedColor,\n    direction: \"ltr\"\n  })));\n};\nCheckboxIOS.displayName = 'Checkbox.IOS';\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6\n  }\n});\nexport default CheckboxIOS;\n\n// @component-docs ignore-next-line\nexport { CheckboxIOS };\n//# sourceMappingURL=CheckboxIOS.js.map"]},"metadata":{},"sourceType":"module"}