{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"leftInset\",\"horizontalInset\",\"style\",\"theme\",\"bold\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import color from'color';import{useInternalTheme}from\"../core/theming\";import{black,white}from\"../styles/themes/v2/colors\";var Divider=function Divider(_ref){var leftInset=_ref.leftInset,_ref$horizontalInset=_ref.horizontalInset,horizontalInset=_ref$horizontalInset===void 0?false:_ref$horizontalInset,style=_ref.style,themeOverrides=_ref.theme,_ref$bold=_ref.bold,bold=_ref$bold===void 0?false:_ref$bold,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var isDarkTheme=theme.dark,isV3=theme.isV3;var dividerColor=isV3?theme.colors.outlineVariant:color(isDarkTheme?white:black).alpha(0.12).rgb().string();return React.createElement(View,_extends({},rest,{style:[{height:StyleSheet.hairlineWidth,backgroundColor:dividerColor},leftInset&&(isV3?styles.v3LeftInset:styles.leftInset),isV3&&horizontalInset&&styles.horizontalInset,isV3&&bold&&styles.bold,style]}));};var styles=StyleSheet.create({leftInset:{marginLeft:72},v3LeftInset:{marginLeft:16},horizontalInset:{marginLeft:16,marginRight:16},bold:{height:1}});export default Divider;","map":{"version":3,"sources":["Divider.tsx"],"names":["React","color","useInternalTheme","black","white","Divider","leftInset","horizontalInset","style","theme","themeOverrides","bold","rest","dark","isDarkTheme","isV3","dividerColor","colors","outlineVariant","alpha","rgb","string","height","StyleSheet","hairlineWidth","backgroundColor","styles","v3LeftInset","create","marginLeft","marginRight"],"mappings":"qcAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAAA,sHAG9B,MAAOC,MAAK,KAAM,OAAO,CAEzB,OAASC,gBAAgB,uBACzB,OAASC,KAAK,CAAEC,KAAK,kCAqDrB,GAAMC,QAAO,CAAG,QAAVA,QAAO,CAAG,IAAA,CAOH,CAPI,GACfC,UAAS,CAMH,IAAA,CANNA,SAAS,sBAMH,IAAA,CALNC,eAAe,CAAfA,eAAe,+BAAG,KAAK,sBACvBC,KAAK,CAIC,IAAA,CAJNA,KAAK,CACEE,cAAc,CAGf,IAAA,CAHND,KAAK,WAGC,IAAA,CAFNE,IAAI,CAAJA,IAAI,oBAAG,KAAK,WACTC,IAAAA,0BACG,IAAA,YACN,GAAMH,MAAK,CAAGP,gBAAgB,CAACQ,cAAc,CAAC,CAC9C,GAAcI,YAAW,CAAWL,KAAK,CAAjCI,IAAI,CAAeE,IAAAA,CAASN,KAAK,CAAdM,IAAAA,CAE3B,GAAMC,aAAY,CAAGD,IAAI,CACrBN,KAAK,CAACQ,MAAM,CAACC,cAAc,CAC3BjB,KAAK,CAACa,WAAW,CAAGV,KAAK,CAAGD,KAAK,CAAC,CAC/BgB,KAAK,CAAC,IAAI,CAAC,CACXC,GAAG,EAAE,CACLC,MAAM,EAAE,CAEf,MACE,MAAA,CAAA,aAAA,CAAC,IAAI,CAAA,QAAA,CAAA,CAAA,CAAA,CACCT,IAAI,CAAA,CACR,KAAK,CAAE,CACL,CAAEU,MAAM,CAAEC,UAAU,CAACC,aAAa,CAAEC,eAAe,CAAET,YAAa,CAAC,CACnEV,SAAS,GAAKS,IAAI,CAAGW,MAAM,CAACC,WAAW,CAAGD,MAAM,CAACpB,SAAS,CAAC,CAC3DS,IAAI,EAAIR,eAAe,EAAImB,MAAM,CAACnB,eAAe,CACjDQ,IAAI,EAAIJ,IAAI,EAAIe,MAAM,CAACf,IAAI,CAC3BH,KAAK,CACL,CAAA,CAAA,CACF,CAEN,CAAC,CAED,GAAMkB,OAAM,CAAGH,UAAU,CAACK,MAAM,CAAC,CAC/BtB,SAAS,CAAE,CACTuB,UAAU,CAAE,EACd,CAAC,CACDF,WAAW,CAAE,CACXE,UAAU,CAAE,EACd,CAAC,CACDtB,eAAe,CAAE,CACfsB,UAAU,CAAE,EAAE,CACdC,WAAW,CAAE,EACf,CAAC,CACDnB,IAAI,CAAE,CACJW,MAAM,CAAE,CACV,CACF,CAAC,CAAC,CAEF,cAAejB,QAAO","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport color from 'color';\nimport { useInternalTheme } from '../core/theming';\nimport { black, white } from '../styles/themes/v2/colors';\n/**\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\n *\n * <div class=\"screenshots\">\n *  <figure>\n *    <img class=\"medium\" src=\"screenshots/divider.png\" />\n *  </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Divider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Text>Lemon</Text>\n *     <Divider />\n *     <Text>Mango</Text>\n *     <Divider />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Divider = _ref => {\n  let {\n    leftInset,\n    horizontalInset = false,\n    style,\n    theme: themeOverrides,\n    bold = false,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    dark: isDarkTheme,\n    isV3\n  } = theme;\n  const dividerColor = isV3 ? theme.colors.outlineVariant : color(isDarkTheme ? white : black).alpha(0.12).rgb().string();\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, {\n    style: [{\n      height: StyleSheet.hairlineWidth,\n      backgroundColor: dividerColor\n    }, leftInset && (isV3 ? styles.v3LeftInset : styles.leftInset), isV3 && horizontalInset && styles.horizontalInset, isV3 && bold && styles.bold, style]\n  }));\n};\nconst styles = StyleSheet.create({\n  leftInset: {\n    marginLeft: 72\n  },\n  v3LeftInset: {\n    marginLeft: 16\n  },\n  horizontalInset: {\n    marginLeft: 16,\n    marginRight: 16\n  },\n  bold: {\n    height: 1\n  }\n});\nexport default Divider;\n//# sourceMappingURL=Divider.js.map"]},"metadata":{},"sourceType":"module"}