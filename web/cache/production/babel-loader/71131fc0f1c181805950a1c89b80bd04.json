{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import color from'color';import{useInternalTheme}from\"../../../core/theming\";import{getConstants}from\"../helpers\";import{AdornmentSide}from\"./enums\";var AffixContext=React.createContext({textStyle:{fontFamily:'',color:''},topPosition:null,side:AdornmentSide.Left});var AffixAdornment=function AffixAdornment(_ref){var affix=_ref.affix,side=_ref.side,textStyle=_ref.textStyle,topPosition=_ref.topPosition,onLayout=_ref.onLayout,visible=_ref.visible,paddingHorizontal=_ref.paddingHorizontal,maxFontSizeMultiplier=_ref.maxFontSizeMultiplier,testID=_ref.testID;return React.createElement(AffixContext.Provider,{value:{side:side,textStyle:textStyle,topPosition:topPosition,onLayout:onLayout,visible:visible,paddingHorizontal:paddingHorizontal,maxFontSizeMultiplier:maxFontSizeMultiplier,testID:testID}},affix);};var TextInputAffix=function TextInputAffix(_ref2){var _theme$colors;var text=_ref2.text,labelStyle=_ref2.textStyle,themeOverrides=_ref2.theme,onTextLayout=_ref2.onLayout;var theme=useInternalTheme(themeOverrides);var _getConstants=getConstants(theme.isV3),AFFIX_OFFSET=_getConstants.AFFIX_OFFSET;var _React$useContext=React.useContext(AffixContext),textStyle=_React$useContext.textStyle,onLayout=_React$useContext.onLayout,topPosition=_React$useContext.topPosition,side=_React$useContext.side,visible=_React$useContext.visible,paddingHorizontal=_React$useContext.paddingHorizontal,maxFontSizeMultiplier=_React$useContext.maxFontSizeMultiplier,testID=_React$useContext.testID;var textColor=color(theme.isV3?theme.colors.onSurface:(_theme$colors=theme.colors)===null||_theme$colors===void 0?void 0:_theme$colors.text).alpha(theme.dark?0.7:0.54).rgb().string();var offset=typeof paddingHorizontal==='number'?paddingHorizontal:AFFIX_OFFSET;var style=_defineProperty({top:topPosition},side,offset);return React.createElement(Animated.View,{style:[styles.container,style,{opacity:(visible===null||visible===void 0?void 0:visible.interpolate({inputRange:[0,1],outputRange:[1,0]}))||1}],onLayout:onLayout,testID:testID},React.createElement(Text,{maxFontSizeMultiplier:maxFontSizeMultiplier,style:[{color:textColor},textStyle,labelStyle],onLayout:onTextLayout,testID:testID+\"-text\"},text));};TextInputAffix.displayName='TextInput.Affix';var styles=StyleSheet.create({container:{position:'absolute',justifyContent:'center',alignItems:'center'}});export default TextInputAffix;export{TextInputAffix,AffixAdornment};","map":{"version":3,"sources":["TextInputAffix.tsx"],"names":["React","color","useInternalTheme","getConstants","AdornmentSide","AffixContext","createContext","textStyle","fontFamily","topPosition","side","Left","AffixAdornment","affix","onLayout","visible","paddingHorizontal","maxFontSizeMultiplier","testID","TextInputAffix","text","labelStyle","theme","themeOverrides","onTextLayout","AFFIX_OFFSET","isV3","useContext","textColor","colors","onSurface","alpha","dark","rgb","string","offset","style","top","styles","container","opacity","interpolate","inputRange","outputRange","displayName","StyleSheet","create","position","justifyContent","alignItems"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import React from 'react';\nimport { Animated, StyleSheet, Text } from 'react-native';\nimport color from 'color';\nimport { useInternalTheme } from '../../../core/theming';\nimport { getConstants } from '../helpers';\nimport { AdornmentSide } from './enums';\nconst AffixContext = /*#__PURE__*/React.createContext({\n  textStyle: {\n    fontFamily: '',\n    color: ''\n  },\n  topPosition: null,\n  side: AdornmentSide.Left\n});\nconst AffixAdornment = _ref => {\n  let {\n    affix,\n    side,\n    textStyle,\n    topPosition,\n    onLayout,\n    visible,\n    paddingHorizontal,\n    maxFontSizeMultiplier,\n    testID\n  } = _ref;\n  return /*#__PURE__*/React.createElement(AffixContext.Provider, {\n    value: {\n      side,\n      textStyle,\n      topPosition,\n      onLayout,\n      visible,\n      paddingHorizontal,\n      maxFontSizeMultiplier,\n      testID\n    }\n  }, affix);\n};\n\n/**\n * A component to render a leading / trailing text in the TextInput\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/textinput-outline.affix.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       mode=\"outlined\"\n *       label=\"Outlined input\"\n *       placeholder=\"Type something\"\n *       right={<TextInput.Affix text=\"/100\" />}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst TextInputAffix = _ref2 => {\n  var _theme$colors;\n  let {\n    text,\n    textStyle: labelStyle,\n    theme: themeOverrides,\n    onLayout: onTextLayout\n  } = _ref2;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    AFFIX_OFFSET\n  } = getConstants(theme.isV3);\n  const {\n    textStyle,\n    onLayout,\n    topPosition,\n    side,\n    visible,\n    paddingHorizontal,\n    maxFontSizeMultiplier,\n    testID\n  } = React.useContext(AffixContext);\n  const textColor = color(theme.isV3 ? theme.colors.onSurface : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.text).alpha(theme.dark ? 0.7 : 0.54).rgb().string();\n  const offset = typeof paddingHorizontal === 'number' ? paddingHorizontal : AFFIX_OFFSET;\n  const style = {\n    top: topPosition,\n    [side]: offset\n  };\n  return /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.container, style, {\n      opacity: (visible === null || visible === void 0 ? void 0 : visible.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0]\n      })) || 1\n    }],\n    onLayout: onLayout,\n    testID: testID\n  }, /*#__PURE__*/React.createElement(Text, {\n    maxFontSizeMultiplier: maxFontSizeMultiplier,\n    style: [{\n      color: textColor\n    }, textStyle, labelStyle],\n    onLayout: onTextLayout,\n    testID: `${testID}-text`\n  }, text));\n};\nTextInputAffix.displayName = 'TextInput.Affix';\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default TextInputAffix;\n\n// @component-docs ignore-next-line\nexport { TextInputAffix, AffixAdornment };\n//# sourceMappingURL=TextInputAffix.js.map"]},"metadata":{},"sourceType":"module"}