{"ast":null,"code":"import Platform from\"react-native-web/dist/exports/Platform\";import setColor from'color';import{grey400,grey800,grey50,grey700,white,black}from\"../../styles/themes/v2/colors\";var getCheckedColor=function getCheckedColor(_ref){var theme=_ref.theme,color=_ref.color;if(color){return color;}if(theme.isV3){return theme.colors.primary;}return theme.colors.accent;};var getThumbTintColor=function getThumbTintColor(_ref2){var theme=_ref2.theme,disabled=_ref2.disabled,value=_ref2.value,checkedColor=_ref2.checkedColor;var isIOS=Platform.OS==='ios';if(isIOS){return undefined;}if(disabled){if(theme.dark){return grey800;}return grey400;}if(value){return checkedColor;}if(theme.dark){return grey400;}return grey50;};var getOnTintColor=function getOnTintColor(_ref3){var theme=_ref3.theme,disabled=_ref3.disabled,value=_ref3.value,checkedColor=_ref3.checkedColor;var isIOS=Platform.OS==='ios';if(isIOS){return checkedColor;}if(disabled){if(theme.dark){if(theme.isV3){return setColor(white).alpha(0.06).rgb().string();}return setColor(white).alpha(0.1).rgb().string();}return setColor(black).alpha(0.12).rgb().string();}if(value){return setColor(checkedColor).alpha(0.5).rgb().string();}if(theme.dark){return grey700;}return'rgb(178, 175, 177)';};export var getSwitchColor=function getSwitchColor(_ref4){var theme=_ref4.theme,disabled=_ref4.disabled,value=_ref4.value,color=_ref4.color;var checkedColor=getCheckedColor({theme:theme,color:color});return{onTintColor:getOnTintColor({theme:theme,disabled:disabled,value:value,checkedColor:checkedColor}),thumbTintColor:getThumbTintColor({theme:theme,disabled:disabled,value:value,checkedColor:checkedColor}),checkedColor:checkedColor};};","map":{"version":3,"sources":["utils.ts"],"names":["setColor","grey400","grey800","grey50","grey700","white","black","getCheckedColor","theme","color","isV3","colors","primary","accent","getThumbTintColor","disabled","value","checkedColor","isIOS","Platform","OS","undefined","dark","getOnTintColor","alpha","rgb","string","getSwitchColor","onTintColor","thumbTintColor"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["import { Platform } from 'react-native';\nimport setColor from 'color';\nimport { grey400, grey800, grey50, grey700, white, black } from '../../styles/themes/v2/colors';\nconst getCheckedColor = _ref => {\n  let {\n    theme,\n    color\n  } = _ref;\n  if (color) {\n    return color;\n  }\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n  return theme.colors.accent;\n};\nconst getThumbTintColor = _ref2 => {\n  let {\n    theme,\n    disabled,\n    value,\n    checkedColor\n  } = _ref2;\n  const isIOS = Platform.OS === 'ios';\n  if (isIOS) {\n    return undefined;\n  }\n  if (disabled) {\n    if (theme.dark) {\n      return grey800;\n    }\n    return grey400;\n  }\n  if (value) {\n    return checkedColor;\n  }\n  if (theme.dark) {\n    return grey400;\n  }\n  return grey50;\n};\nconst getOnTintColor = _ref3 => {\n  let {\n    theme,\n    disabled,\n    value,\n    checkedColor\n  } = _ref3;\n  const isIOS = Platform.OS === 'ios';\n  if (isIOS) {\n    return checkedColor;\n  }\n  if (disabled) {\n    if (theme.dark) {\n      if (theme.isV3) {\n        return setColor(white).alpha(0.06).rgb().string();\n      }\n      return setColor(white).alpha(0.1).rgb().string();\n    }\n    return setColor(black).alpha(0.12).rgb().string();\n  }\n  if (value) {\n    return setColor(checkedColor).alpha(0.5).rgb().string();\n  }\n  if (theme.dark) {\n    return grey700;\n  }\n  return 'rgb(178, 175, 177)';\n};\nexport const getSwitchColor = _ref4 => {\n  let {\n    theme,\n    disabled,\n    value,\n    color\n  } = _ref4;\n  const checkedColor = getCheckedColor({\n    theme,\n    color\n  });\n  return {\n    onTintColor: getOnTintColor({\n      theme,\n      disabled,\n      value,\n      checkedColor\n    }),\n    thumbTintColor: getThumbTintColor({\n      theme,\n      disabled,\n      value,\n      checkedColor\n    }),\n    checkedColor\n  };\n};\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}