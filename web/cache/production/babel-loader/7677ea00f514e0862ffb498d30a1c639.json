{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"status\",\"theme\",\"disabled\",\"onPress\",\"testID\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from\"../../core/theming\";import MaterialCommunityIcon from\"../MaterialCommunityIcon\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import{getAndroidSelectionControlColor}from\"./utils\";var ANIMATION_DURATION=100;var CheckboxAndroid=function CheckboxAndroid(_ref){var status=_ref.status,themeOverrides=_ref.theme,disabled=_ref.disabled,onPress=_ref.onPress,testID=_ref.testID,rest=_objectWithoutProperties(_ref,_excluded);var theme=useInternalTheme(themeOverrides);var _React$useRef=React.useRef(new Animated.Value(1)),scaleAnim=_React$useRef.current;var isFirstRendering=React.useRef(true);var scale=theme.animation.scale;React.useEffect(function(){if(isFirstRendering.current){isFirstRendering.current=false;return;}var checked=status==='checked';Animated.sequence([Animated.timing(scaleAnim,{toValue:0.85,duration:checked?ANIMATION_DURATION*scale:0,useNativeDriver:false}),Animated.timing(scaleAnim,{toValue:1,duration:checked?ANIMATION_DURATION*scale:ANIMATION_DURATION*scale*1.75,useNativeDriver:false})]).start();},[status,scaleAnim,scale]);var checked=status==='checked';var indeterminate=status==='indeterminate';var _getAndroidSelectionC=getAndroidSelectionControlColor({theme:theme,disabled:disabled,checked:checked,customColor:rest.color,customUncheckedColor:rest.uncheckedColor}),rippleColor=_getAndroidSelectionC.rippleColor,selectionControlColor=_getAndroidSelectionC.selectionControlColor;var borderWidth=scaleAnim.interpolate({inputRange:[0.8,1],outputRange:[7,0]});var icon=indeterminate?'minus-box':checked?'checkbox-marked':'checkbox-blank-outline';return React.createElement(TouchableRipple,_extends({},rest,{borderless:true,rippleColor:rippleColor,onPress:onPress,disabled:disabled,accessibilityRole:\"checkbox\",accessibilityState:{disabled:disabled,checked:checked},accessibilityLiveRegion:\"polite\",style:styles.container,testID:testID,theme:theme}),React.createElement(Animated.View,{style:{transform:[{scale:scaleAnim}]}},React.createElement(MaterialCommunityIcon,{allowFontScaling:false,name:icon,size:24,color:selectionControlColor,direction:\"ltr\"}),React.createElement(View,{style:[StyleSheet.absoluteFill,styles.fillContainer]},React.createElement(Animated.View,{style:[styles.fill,{borderColor:selectionControlColor},{borderWidth:borderWidth}]}))));};CheckboxAndroid.displayName='Checkbox.Android';var styles=StyleSheet.create({container:{borderRadius:18,width:36,height:36,padding:6},fillContainer:{alignItems:'center',justifyContent:'center'},fill:{height:14,width:14}});export default CheckboxAndroid;export{CheckboxAndroid};","map":{"version":3,"sources":["CheckboxAndroid.tsx"],"names":["React","useInternalTheme","MaterialCommunityIcon","TouchableRipple","getAndroidSelectionControlColor","ANIMATION_DURATION","CheckboxAndroid","status","theme","themeOverrides","disabled","onPress","testID","rest","current","scaleAnim","useRef","Animated","Value","isFirstRendering","animation","scale","useEffect","checked","sequence","timing","toValue","duration","useNativeDriver","start","indeterminate","rippleColor","selectionControlColor","customColor","color","customUncheckedColor","uncheckedColor","borderWidth","interpolate","inputRange","outputRange","icon","styles","container","transform","StyleSheet","absoluteFill","fillContainer","fill","borderColor","displayName","create","borderRadius","width","height","padding","alignItems","justifyContent"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport { useInternalTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { getAndroidSelectionControlColor } from './utils';\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 100;\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nconst CheckboxAndroid = _ref => {\n  let {\n    status,\n    theme: themeOverrides,\n    disabled,\n    onPress,\n    testID,\n    ...rest\n  } = _ref;\n  const theme = useInternalTheme(themeOverrides);\n  const {\n    current: scaleAnim\n  } = React.useRef(new Animated.Value(1));\n  const isFirstRendering = React.useRef(true);\n  const {\n    animation: {\n      scale\n    }\n  } = theme;\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n    const checked = status === 'checked';\n    Animated.sequence([Animated.timing(scaleAnim, {\n      toValue: 0.85,\n      duration: checked ? ANIMATION_DURATION * scale : 0,\n      useNativeDriver: false\n    }), Animated.timing(scaleAnim, {\n      toValue: 1,\n      duration: checked ? ANIMATION_DURATION * scale : ANIMATION_DURATION * scale * 1.75,\n      useNativeDriver: false\n    })]).start();\n  }, [status, scaleAnim, scale]);\n  const checked = status === 'checked';\n  const indeterminate = status === 'indeterminate';\n  const {\n    rippleColor,\n    selectionControlColor\n  } = getAndroidSelectionControlColor({\n    theme,\n    disabled,\n    checked,\n    customColor: rest.color,\n    customUncheckedColor: rest.uncheckedColor\n  });\n  const borderWidth = scaleAnim.interpolate({\n    inputRange: [0.8, 1],\n    outputRange: [7, 0]\n  });\n  const icon = indeterminate ? 'minus-box' : checked ? 'checkbox-marked' : 'checkbox-blank-outline';\n  return /*#__PURE__*/React.createElement(TouchableRipple, _extends({}, rest, {\n    borderless: true,\n    rippleColor: rippleColor,\n    onPress: onPress,\n    disabled: disabled,\n    accessibilityRole: \"checkbox\",\n    accessibilityState: {\n      disabled,\n      checked\n    },\n    accessibilityLiveRegion: \"polite\",\n    style: styles.container,\n    testID: testID,\n    theme: theme\n  }), /*#__PURE__*/React.createElement(Animated.View, {\n    style: {\n      transform: [{\n        scale: scaleAnim\n      }]\n    }\n  }, /*#__PURE__*/React.createElement(MaterialCommunityIcon, {\n    allowFontScaling: false,\n    name: icon,\n    size: 24,\n    color: selectionControlColor,\n    direction: \"ltr\"\n  }), /*#__PURE__*/React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.fillContainer]\n  }, /*#__PURE__*/React.createElement(Animated.View, {\n    style: [styles.fill, {\n      borderColor: selectionControlColor\n    }, {\n      borderWidth\n    }]\n  }))));\n};\nCheckboxAndroid.displayName = 'Checkbox.Android';\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  fill: {\n    height: 14,\n    width: 14\n  }\n});\nexport default CheckboxAndroid;\n\n// @component-docs ignore-next-line\nexport { CheckboxAndroid };\n//# sourceMappingURL=CheckboxAndroid.js.map"]},"metadata":{},"sourceType":"module"}