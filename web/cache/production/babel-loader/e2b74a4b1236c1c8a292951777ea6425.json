{"ast":null,"code":"import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import ToggleButton from\"./ToggleButton\";import ToggleButtonGroup from\"./ToggleButtonGroup\";var ToggleButtonRow=function ToggleButtonRow(_ref){var value=_ref.value,onValueChange=_ref.onValueChange,children=_ref.children,style=_ref.style;var count=React.Children.count(children);return React.createElement(ToggleButtonGroup,{value:value,onValueChange:onValueChange},React.createElement(View,{style:[styles.row,style]},React.Children.map(children,function(child,i){if(child&&child.type===ToggleButton){return React.cloneElement(child,{style:[styles.button,i===0?styles.first:i===count-1?styles.last:styles.middle,child.props.style]});}return child;})));};ToggleButtonRow.displayName='ToggleButton.Row';var styles=StyleSheet.create({row:{flexDirection:'row'},button:{borderWidth:StyleSheet.hairlineWidth},first:{borderTopRightRadius:0,borderBottomRightRadius:0},middle:{borderRadius:0,borderLeftWidth:0},last:{borderLeftWidth:0,borderTopLeftRadius:0,borderBottomLeftRadius:0}});export default ToggleButtonRow;export{ToggleButtonRow};","map":{"version":3,"sources":["ToggleButtonRow.tsx"],"names":["React","ToggleButton","ToggleButtonGroup","ToggleButtonRow","value","onValueChange","children","style","count","Children","styles","row","map","child","i","type","cloneElement","button","first","last","middle","props","displayName","StyleSheet","create","flexDirection","borderWidth","hairlineWidth","borderTopRightRadius","borderBottomRightRadius","borderRadius","borderLeftWidth","borderTopLeftRadius","borderBottomLeftRadius"],"mappings":"AAAA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAAA,sHAG9B,MAAOC,aAAY,sBACnB,MAAOC,kBAAiB,2BA+CxB,GAAMC,gBAAe,CAAG,QAAlBA,gBAAe,CAAG,IAAA,CAAsD,CAArD,GAAEC,MAAK,CAAyC,IAAA,CAA9CA,KAAK,CAAEC,aAAa,CAA0B,IAAA,CAAvCA,aAAa,CAAEC,QAAQ,CAAgB,IAAA,CAAxBA,QAAQ,CAAEC,KAAAA,CAAc,IAAA,CAAdA,KAAAA,CACzD,GAAMC,MAAK,CAAGR,KAAK,CAACS,QAAQ,CAACD,KAAK,CAACF,QAAQ,CAAC,CAE5C,MACE,MAAA,CAAA,aAAA,CAAC,iBAAiB,CAAA,CAAC,KAAK,CAAEF,KAAM,CAAC,aAAa,CAAEC,aAAc,CAAA,CAC5D,KAAA,CAAA,aAAA,CAAC,IAAI,CAAA,CAAC,KAAK,CAAE,CAACK,MAAM,CAACC,GAAG,CAAEJ,KAAK,CAAE,CAAA,CAC9BP,KAAK,CAACS,QAAQ,CAACG,GAAG,CAACN,QAAQ,CAAE,SAACO,KAAK,CAAEC,CAAC,CAAK,CAE1C,GAAID,KAAK,EAAIA,KAAK,CAACE,IAAI,GAAKd,YAAY,CAAE,CAExC,MAAOD,MAAK,CAACgB,YAAY,CAACH,KAAK,CAAE,CAC/BN,KAAK,CAAE,CACLG,MAAM,CAACO,MAAM,CACbH,CAAC,GAAK,CAAC,CACHJ,MAAM,CAACQ,KAAK,CACZJ,CAAC,GAAKN,KAAK,CAAG,CAAC,CACfE,MAAM,CAACS,IAAI,CACXT,MAAM,CAACU,MAAM,CAEjBP,KAAK,CAACQ,KAAK,CAACd,KAAK,CAErB,CAAC,CAAC,CACJ,CAEA,MAAOM,MAAK,CACd,CAAC,CAAC,CACG,CACW,CAExB,CAAC,CAEDV,eAAe,CAACmB,WAAW,CAAG,kBAAkB,CAEhD,GAAMZ,OAAM,CAAGa,UAAU,CAACC,MAAM,CAAC,CAC/Bb,GAAG,CAAE,CACHc,aAAa,CAAE,KACjB,CAAC,CACDR,MAAM,CAAE,CACNS,WAAW,CAAEH,UAAU,CAACI,aAC1B,CAAC,CAEDT,KAAK,CAAE,CACLU,oBAAoB,CAAE,CAAC,CACvBC,uBAAuB,CAAE,CAC3B,CAAC,CAEDT,MAAM,CAAE,CACNU,YAAY,CAAE,CAAC,CACfC,eAAe,CAAE,CACnB,CAAC,CAEDZ,IAAI,CAAE,CACJY,eAAe,CAAE,CAAC,CAClBC,mBAAmB,CAAE,CAAC,CACtBC,sBAAsB,CAAE,CAC1B,CACF,CAAC,CAAC,CAEF,cAAe9B,gBAAe,CAG9B,OAASA,eAAe","sourceRoot":"../../src","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport ToggleButton from './ToggleButton';\nimport ToggleButtonGroup from './ToggleButtonGroup';\n/**\n * Toggle button row renders a group of toggle buttons in a row.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/toggle-button-row.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ToggleButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('left');\n *\n *   return (\n *     <ToggleButton.Row onValueChange={value => setValue(value)} value={value}>\n *       <ToggleButton icon=\"format-align-left\" value=\"left\" />\n *       <ToggleButton icon=\"format-align-right\" value=\"right\" />\n *     </ToggleButton.Row>\n *   );\n * };\n *\n * export default MyComponent;\n *\n *```\n */\nconst ToggleButtonRow = _ref => {\n  let {\n    value,\n    onValueChange,\n    children,\n    style\n  } = _ref;\n  const count = React.Children.count(children);\n  return /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    value: value,\n    onValueChange: onValueChange\n  }, /*#__PURE__*/React.createElement(View, {\n    style: [styles.row, style]\n  }, React.Children.map(children, (child, i) => {\n    // @ts-expect-error: TypeScript complains about child.type but it doesn't matter\n    if (child && child.type === ToggleButton) {\n      // @ts-expect-error: We're sure that child is a React Element\n      return /*#__PURE__*/React.cloneElement(child, {\n        style: [styles.button, i === 0 ? styles.first : i === count - 1 ? styles.last : styles.middle,\n        // @ts-expect-error: We're sure that child is a React Element\n        child.props.style]\n      });\n    }\n    return child;\n  })));\n};\nToggleButtonRow.displayName = 'ToggleButton.Row';\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  },\n  button: {\n    borderWidth: StyleSheet.hairlineWidth\n  },\n  first: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  middle: {\n    borderRadius: 0,\n    borderLeftWidth: 0\n  },\n  last: {\n    borderLeftWidth: 0,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0\n  }\n});\nexport default ToggleButtonRow;\n\n// @component-docs ignore-next-line\nexport { ToggleButtonRow };\n//# sourceMappingURL=ToggleButtonRow.js.map"]},"metadata":{},"sourceType":"module"}