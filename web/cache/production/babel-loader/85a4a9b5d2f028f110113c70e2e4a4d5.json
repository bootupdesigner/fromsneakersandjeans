{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";var _excluded=[\"icon\",\"onPress\",\"forceTextInputFocus\",\"color\",\"theme\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{useInternalTheme}from\"../../../core/theming\";import IconButton from\"../../IconButton/IconButton\";import{ICON_SIZE}from\"../constants\";import{getConstants}from\"../helpers\";var StyleContext=React.createContext({style:{},isTextInputFocused:false,forceFocus:function forceFocus(){},testID:''});var IconAdornment=function IconAdornment(_ref){var icon=_ref.icon,topPosition=_ref.topPosition,side=_ref.side,isTextInputFocused=_ref.isTextInputFocused,forceFocus=_ref.forceFocus,testID=_ref.testID,themeOverrides=_ref.theme;var _useInternalTheme=useInternalTheme(themeOverrides),isV3=_useInternalTheme.isV3;var _getConstants=getConstants(isV3),ICON_OFFSET=_getConstants.ICON_OFFSET;var style=_defineProperty({top:topPosition},side,ICON_OFFSET);var contextState={style:style,isTextInputFocused:isTextInputFocused,forceFocus:forceFocus,testID:testID};return React.createElement(StyleContext.Provider,{value:contextState},icon);};var TextInputIcon=function TextInputIcon(_ref2){var icon=_ref2.icon,onPress=_ref2.onPress,forceTextInputFocus=_ref2.forceTextInputFocus,color=_ref2.color,themeOverrides=_ref2.theme,rest=_objectWithoutProperties(_ref2,_excluded);var _React$useContext=React.useContext(StyleContext),style=_React$useContext.style,isTextInputFocused=_React$useContext.isTextInputFocused,forceFocus=_React$useContext.forceFocus,testID=_React$useContext.testID;var onPressWithFocusControl=React.useCallback(function(e){if(forceTextInputFocus&&!isTextInputFocused){forceFocus();}onPress===null||onPress===void 0?void 0:onPress(e);},[forceTextInputFocus,forceFocus,isTextInputFocused,onPress]);var theme=useInternalTheme(themeOverrides);var iconColor=color;if(theme.isV3){if(rest.disabled){iconColor=theme.colors.onSurface;}iconColor=theme.colors.onSurfaceVariant;}else{iconColor=theme.colors.text;}return React.createElement(View,{style:[styles.container,style]},React.createElement(IconButton,_extends({icon:icon,style:styles.iconButton,size:ICON_SIZE,onPress:onPressWithFocusControl,iconColor:typeof color==='function'?color(isTextInputFocused):iconColor,testID:testID,theme:themeOverrides},rest)));};TextInputIcon.displayName='TextInput.Icon';TextInputIcon.defaultProps={forceTextInputFocus:true};var styles=StyleSheet.create({container:{position:'absolute',width:ICON_SIZE,height:ICON_SIZE,justifyContent:'center',alignItems:'center'},iconButton:{margin:0}});export default TextInputIcon;export{IconAdornment};","map":{"version":3,"sources":["TextInputIcon.tsx"],"names":["React","useInternalTheme","IconButton","ICON_SIZE","getConstants","StyleContext","createContext","style","isTextInputFocused","forceFocus","testID","IconAdornment","icon","topPosition","side","theme","themeOverrides","isV3","ICON_OFFSET","top","contextState","TextInputIcon","onPress","forceTextInputFocus","color","rest","useContext","onPressWithFocusControl","useCallback","e","iconColor","disabled","colors","onSurface","onSurfaceVariant","text","styles","container","iconButton","displayName","defaultProps","StyleSheet","create","position","width","height","justifyContent","alignItems","margin"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useInternalTheme } from '../../../core/theming';\nimport IconButton from '../../IconButton/IconButton';\nimport { ICON_SIZE } from '../constants';\nimport { getConstants } from '../helpers';\nconst StyleContext = /*#__PURE__*/React.createContext({\n  style: {},\n  isTextInputFocused: false,\n  forceFocus: () => {},\n  testID: ''\n});\nconst IconAdornment = _ref => {\n  let {\n    icon,\n    topPosition,\n    side,\n    isTextInputFocused,\n    forceFocus,\n    testID,\n    theme: themeOverrides\n  } = _ref;\n  const {\n    isV3\n  } = useInternalTheme(themeOverrides);\n  const {\n    ICON_OFFSET\n  } = getConstants(isV3);\n  const style = {\n    top: topPosition,\n    [side]: ICON_OFFSET\n  };\n  const contextState = {\n    style,\n    isTextInputFocused,\n    forceFocus,\n    testID\n  };\n  return /*#__PURE__*/React.createElement(StyleContext.Provider, {\n    value: contextState\n  }, icon);\n};\n\n/**\n * A component to render a leading / trailing icon in the TextInput\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/textinput-flat.icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       label=\"Password\"\n *       secureTextEntry\n *       right={<TextInput.Icon icon=\"eye\" />}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst TextInputIcon = _ref2 => {\n  let {\n    icon,\n    onPress,\n    forceTextInputFocus,\n    color,\n    theme: themeOverrides,\n    ...rest\n  } = _ref2;\n  const {\n    style,\n    isTextInputFocused,\n    forceFocus,\n    testID\n  } = React.useContext(StyleContext);\n  const onPressWithFocusControl = React.useCallback(e => {\n    if (forceTextInputFocus && !isTextInputFocused) {\n      forceFocus();\n    }\n    onPress === null || onPress === void 0 ? void 0 : onPress(e);\n  }, [forceTextInputFocus, forceFocus, isTextInputFocused, onPress]);\n  const theme = useInternalTheme(themeOverrides);\n  let iconColor = color;\n  if (theme.isV3) {\n    if (rest.disabled) {\n      iconColor = theme.colors.onSurface;\n    }\n    iconColor = theme.colors.onSurfaceVariant;\n  } else {\n    iconColor = theme.colors.text;\n  }\n  return /*#__PURE__*/React.createElement(View, {\n    style: [styles.container, style]\n  }, /*#__PURE__*/React.createElement(IconButton, _extends({\n    icon: icon,\n    style: styles.iconButton,\n    size: ICON_SIZE,\n    onPress: onPressWithFocusControl,\n    iconColor: typeof color === 'function' ? color(isTextInputFocused) : iconColor,\n    testID: testID,\n    theme: themeOverrides\n  }, rest)));\n};\nTextInputIcon.displayName = 'TextInput.Icon';\nTextInputIcon.defaultProps = {\n  forceTextInputFocus: true\n};\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    width: ICON_SIZE,\n    height: ICON_SIZE,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  iconButton: {\n    margin: 0\n  }\n});\nexport default TextInputIcon;\n\n// @component-docs ignore-next-line\nexport { IconAdornment };\n//# sourceMappingURL=TextInputIcon.js.map"]},"metadata":{},"sourceType":"module"}