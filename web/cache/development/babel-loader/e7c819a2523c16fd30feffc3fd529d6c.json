{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Placement } from \"./Types\";\nvar Arrow = React.forwardRef(function (props, ref) {\n  var _a;\n  var placement = props.placement,\n    color = props.color,\n    arrowSize = props.arrowSize,\n    positionStyle = props.positionStyle,\n    elevation = props.elevation;\n  var isTransparent = color ? color.toString() === 'transparent' || color.toString().startsWith('rgba') || color.toString().startsWith('hsla') || color.toString().startsWith('#') && color.toString().length > 7 : false;\n  var width = arrowSize.width + (isTransparent ? 0 : 2);\n  var height = arrowSize.height + (isTransparent ? 0 : 2);\n  var placeLeftOrRight = [Placement.LEFT, Placement.RIGHT].includes(placement);\n  var arrowOuterStyle = __assign({\n    position: 'absolute',\n    width: placeLeftOrRight ? height : width,\n    height: placeLeftOrRight ? width : height,\n    overflow: 'hidden',\n    elevation: elevation\n  }, positionStyle);\n  var arrowInnerStyle = (_a = {\n    position: 'absolute'\n  }, _a[placement] = 0, _a.borderBottomColor = color, _a.borderRightColor = 'transparent', _a.borderLeftColor = 'transparent', _a.width = width, _a.height = height * 2, _a.borderBottomWidth = height, _a.borderRightWidth = width / 2, _a.borderLeftWidth = width / 2, _a);\n  switch (placement) {\n    case Placement.TOP:\n      arrowInnerStyle.transform = [{\n        rotateZ: '180deg'\n      }];\n      break;\n    case Placement.LEFT:\n      arrowInnerStyle.transform = [{\n        rotateZ: '90deg'\n      }];\n      break;\n    case Placement.RIGHT:\n      arrowInnerStyle.transform = [{\n        rotateZ: '270deg'\n      }];\n      break;\n    default:\n  }\n  return React.createElement(View, {\n    style: arrowOuterStyle,\n    ref: ref\n  }, React.createElement(View, {\n    style: arrowInnerStyle\n  }));\n});\nexport default Arrow;","map":{"version":3,"sources":["../src/Arrow.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,KAAqC,MAAM,OAAO;AAAC;AAE1D,SAAS,SAAS;AASlB,IAAM,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,UAAC,KAAiB,EAAE,GAAuB,EAAA;;EAChE,IAAA,SAAS,GAAiD,KAAK,CAAA,SAAtD;IAAE,KAAK,GAA0C,KAAK,CAAA,KAA/C;IAAE,SAAS,GAA+B,KAAK,CAAA,SAApC;IAAE,aAAa,GAAgB,KAAK,CAAA,aAArB;IAAE,SAAS,GAAK,KAAK,CAAA,SAAV;EAM7D,IAAM,aAAa,GAAG,KAAK,GACvB,KAAK,CAAC,QAAQ,EAAE,KAAK,aAAa,IAClC,KAAK,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,IACnC,KAAK,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,IAClC,KAAK,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,GAAG,CAAE,GACjE,KAAK;EACT,IAAM,KAAK,GAAG,SAAS,CAAC,KAAK,IAAI,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC;EACvD,IAAM,MAAM,GAAG,SAAS,CAAC,MAAM,IAAI,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC;EAGzD,IAAM,gBAAgB,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC;EAC9E,IAAM,eAAe,GAAA,QAAA,CAAA;IACnB,QAAQ,EAAE,UAAU;IACpB,KAAK,EAAE,gBAAgB,GAAG,MAAM,GAAG,KAAK;IACxC,MAAM,EAAE,gBAAgB,GAAG,KAAK,GAAG,MAAM;IACzC,QAAQ,EAAE,QAAQ;IAClB,SAAS,EAAA;EAAA,CAAA,EACN,aAAa,CACjB;EAGD,IAAM,eAAe,IAAA,EAAA,GAAA;IACnB,QAAQ,EAAE;KACV,EAAA,CAAC,SAAS,CAAA,GAAG,CAAC,EACd,EAAA,CAAA,iBAAiB,GAAE,KAAK,EACxB,EAAA,CAAA,gBAAgB,GAAE,aAAa,EAC/B,EAAA,CAAA,eAAe,GAAE,aAAa,EAC9B,EAAA,CAAA,KAAK,GAAA,KAAA,EACL,EAAA,CAAA,MAAM,GAAE,MAAM,GAAG,CAAC,EAClB,EAAA,CAAA,iBAAiB,GAAE,MAAM,EACzB,EAAA,CAAA,gBAAgB,GAAE,KAAK,GAAG,CAAC,EAC3B,EAAA,CAAA,eAAe,GAAE,KAAK,GAAG,CAAC,E,GAC3B;EAGD,QAAQ,SAAS;IACf,KAAK,SAAS,CAAC,GAAG;MAAE,eAAe,CAAC,SAAS,GAAG,CAAC;QAAE,OAAO,EAAE;MAAQ,CAAE,CAAC;MAAE;IACzE,KAAK,SAAS,CAAC,IAAI;MAAE,eAAe,CAAC,SAAS,GAAG,CAAC;QAAE,OAAO,EAAE;MAAO,CAAE,CAAC;MAAE;IACzE,KAAK,SAAS,CAAC,KAAK;MAAE,eAAe,CAAC,SAAS,GAAG,CAAC;QAAE,OAAO,EAAE;MAAQ,CAAE,CAAC;MAAE;IAC3E;EAAQ;EAGV,OACE,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IAAC,KAAK,EAAE,eAAe;IAAE,GAAG,EAAE;EAAG,CAAA,EACpC,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA;IAAC,KAAK,EAAE;EAAe,CAAA,CAAI,CAC3B;AAEX,CAAC,CAAC;AAEF,eAAe,KAAK","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport { View } from 'react-native';\nimport { Placement } from './Types';\nvar Arrow = React.forwardRef(function (props, ref) {\n    var _a;\n    var placement = props.placement, color = props.color, arrowSize = props.arrowSize, positionStyle = props.positionStyle, elevation = props.elevation;\n    /*\n     * Make width and height slightly bigger so that it overlaps popover to eliminate seem\n     * (unless transparency is in play, in which case the overlap would show)\n     */\n    var isTransparent = color\n        ? color.toString() === 'transparent' ||\n            color.toString().startsWith('rgba') ||\n            color.toString().startsWith('hsla') ||\n            (color.toString().startsWith('#') && color.toString().length > 7)\n        : false;\n    var width = arrowSize.width + (isTransparent ? 0 : 2);\n    var height = arrowSize.height + (isTransparent ? 0 : 2);\n    // Flip width and height when showing on side to account for inner transform\n    var placeLeftOrRight = [Placement.LEFT, Placement.RIGHT].includes(placement);\n    var arrowOuterStyle = __assign({ position: 'absolute', width: placeLeftOrRight ? height : width, height: placeLeftOrRight ? width : height, overflow: 'hidden', elevation: elevation }, positionStyle);\n    // Create a triangle using borders\n    var arrowInnerStyle = (_a = {\n            position: 'absolute'\n        },\n        _a[placement] = 0,\n        _a.borderBottomColor = color,\n        _a.borderRightColor = 'transparent',\n        _a.borderLeftColor = 'transparent',\n        _a.width = width,\n        _a.height = height * 2,\n        _a.borderBottomWidth = height,\n        _a.borderRightWidth = width / 2,\n        _a.borderLeftWidth = width / 2,\n        _a);\n    // Rotate to show the triangle in different directions\n    switch (placement) {\n        case Placement.TOP:\n            arrowInnerStyle.transform = [{ rotateZ: '180deg' }];\n            break;\n        case Placement.LEFT:\n            arrowInnerStyle.transform = [{ rotateZ: '90deg' }];\n            break;\n        case Placement.RIGHT:\n            arrowInnerStyle.transform = [{ rotateZ: '270deg' }];\n            break;\n        default:\n    }\n    return (React.createElement(View, { style: arrowOuterStyle, ref: ref },\n        React.createElement(View, { style: arrowInnerStyle })));\n});\nexport default Arrow;\n//# sourceMappingURL=Arrow.js.map"]},"metadata":{},"sourceType":"module"}